---
layout: post
title: retrofit2 + okhttp3 + rxandroid2네이버 기계번역 사용하기
category: andorid
comments: true
description: retrofit2,okhttp3,rxandroid2 네이버 기계번역 사용하기
tags:
    - retrofit2
    - rxandroid2
---



### retrofit2 + rxandroid2 를 이용한 통신


#### 1. dependencies 추가

```gradle
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
```


#### 2. RxAndroid2 관련 의존성이 추가됨
 - 인터넷 샘플에는 RxAndroid1 관련 내용이 많아서 RxAndroid2 를 만들어 보았습니다. 
 
#### 3. 기존 번역은 버튼에서 버튼을 하나더 추가해서 rxandroid2 를 사용하도록 하겠습니다.
 - 버튼 추가와 이벤트 연결을 해주세요.
 - 전체 코드에 있습니다. 참고해 주세요

#### 4. BaseActivity 고려 안함
 - 샘플 코드에서 상속 받은 액티비티가 있으면 이상하게 잘 안보게 되어서 추가 안했습니다.
 - 애플리케이션 만들때 기본 액티비티 상속 받으면 편한점이 많아습니다.

#### 5. 리액티브 관련 내용은 다른곳 을 추천 합니다.
 - [Realm rxandroid 링크](https://realm.io/kr/news/rxandroid/)
 - rxandroid 링크들을 공부 하다 보면 람다 문법이 많이 나오는데 저는 사용안합니다.
 - 처음 람다를 접하면 이해가 안되고 무엇을 넣어야 할지 모르겠습니다.
 - 좀더 편하게 되고 전혀 헷갈리지 않을때 사용을 고려하겠습니다.

#### 6. retrofit2 + rxandroid2 진행 순서
 - retrofit2 클라이언트에 rxandroid2 어댑터 추가
 - retrofit2에 리퀘스트 rxandroid 용 Observable 추가
 - CompositeDisposable 을 사용 및 생성 추가
 - 결과 콜백 받을 클래스 생성, 기본을 사용해도 되지만 이건 나중에 사용하기 좋게 클래스 추가
 - 버튼 클릭시 rxandroid 형태로 스트림 시작


#### 7. 위 순서대로 진행 코드 추가

##### 1. retrofit2 클라이언트에 rxandroid2 어댑터 추가
  - AppClient 클래스의 retrofit 생성에서 addCallAdapterFactory 를 추가 합니다.
  - 추가된 의존성에 RxJava2CallAdapterFactory 가 있습니다.
    
  - ```java
    mRetrofit = new Retrofit.Builder()
    .baseUrl(ApiStores.API_SERVER_URL)
    .addConverterFactory(GsonConverterFactory.create())
    .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
    .client(okHttpClient)
    .build();
    ```

##### 2. retrofit2에 리퀘스트 rxandroid 용 Observable 추가
  - ApiStores 클래스에 Observable 을 반환 하는 리퀘스트 추가
  
  - ```javja
    @FormUrlEncoded
    @POST("/v1/language/translate")
    Observable<TranslateMessage> loadDataByRetrofitRx(
            @Field("source") String source,
            @Field("target") String target,
            @Field("text") String text);  
    ```

##### 3. CompositeDisposable 을 사용 및 생성 추가
 -  Observable, Observer 를 아래 처럼 추가 했는데 좋아 보이지 않음
 - <script src="https://gist.github.com/pyeongho/7b0a8b61f99271d81b4f4849906cad8e.js"></script>
 
 - 그래서 Observer 에러 처리와 좀더 이해하기 쉬윈 메소드로 변경하기 위해서 옵저버를 상속함
 - <script src="https://gist.github.com/pyeongho/e2bfdb18687c105d3253b87f2b1d01b1.js"></script>
 
 - 위 클래스를 이용하여 사용
 - <script src="https://gist.github.com/pyeongho/e7ba0b445883fab14479126bf0b3ca5b.js"></script>
 - subcription 이 훨씬 이해하기 좋게 변경됨


#### 8 . 최종 결과 코드
  - [github 링크 전체 파일](https://github.com/pyeongho/retrofit2sample)
  - 한번에 커밋 하지 못해서 두번째 세번째 업데이트 내용입니다.