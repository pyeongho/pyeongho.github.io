<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PyeongHo Factory - Articles</title>
    <description>즐거운 공장</description>
    <link>
    https://pyeongho.github.io</link>
    
      
      <item>
        <title>안드로이드 스튜디오 로그에 링크 추가하기</title>
        
          <description>&lt;h3&gt;안드로이드 개발중에 로그를 출력하면서 불편한 점 개선 하기&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;로그출력 기능의 추가&lt;/li&gt;
&lt;li&gt;로그 출력시 파일명과 메소드 명으로 찾기 불편한 사람들을 위함 &lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/log_link</link>
        <guid isPermaLink="true">https://pyeongho.github.io/log_link</guid>
      </item>
      
    
      
      <item>
        <title>루팅 기기에서 원격 ADB</title>
        
          <description>&lt;h3&gt;루팅 기기에서 ADB 원격 가능하도록 하는 방법&lt;/h3&gt;

&lt;p&gt;&lt;script src=&quot;https://gist.github.com/pyeongho/20bc05ab4648c13cf29d2fb7eff583ad.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
        
        <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/root_adb</link>
        <guid isPermaLink="true">https://pyeongho.github.io/root_adb</guid>
      </item>
      
    
      
      <item>
        <title>인증서 피닝, 인증서 고정</title>
        
          <description>&lt;h3&gt;https 사용 시 인증서를 고정 하자&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;frida를 이용해서 인증서를 변경해서 공격이 가능해 보인다.&lt;/li&gt;
&lt;li&gt;보안팀에서 인증서 피닝을 해달라고 요청이 왔다.&lt;/li&gt;
&lt;li&gt;내용을 물어 보고 찾아보니 인증서 값을 공정 하는 내용&lt;/li&gt;
&lt;li&gt;인증서를 미리 확인해서 핀으로 고정 한다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/cert_pinning</link>
        <guid isPermaLink="true">https://pyeongho.github.io/cert_pinning</guid>
      </item>
      
    
      
      <item>
        <title>플레이스토어 활용</title>
        
          <description>&lt;h3&gt;플레이스토어 활용&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;예약게시 기능

&lt;ul&gt;
&lt;li&gt;플레이스토어 언젠가 부터 예약게시 기능이 생성 되었다.&lt;/li&gt;
&lt;li&gt;원하는 날짜에 자동으로 되는 예약이 아니다.&lt;/li&gt;
&lt;li&gt;스토어 등록 정보 하단에 있는 예약 게시 기능을 활성화 하면 바이너리 활성화 이후 스토어 배포 준비가 되면 사용자가 직접 게시 버튼을 눌러서 원하는 시간에 업데이트가 가능하다.&lt;/li&gt;
&lt;li&gt;기존에는 바이너리 업데이트후 검토 완료후 자동으로 게시 되어 정확한 시간을 알수가 없었다.&lt;/li&gt;
&lt;li&gt;예약게시를 활성화 이후에는 검토가 완료 되면 게시 버튼이 활성화가 된다.&lt;/li&gt;
&lt;li&gt;원하는 시간 몇분전에(플레이스토어 반영 시간) 게시 버튼만 누르면 된다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/playstore</link>
        <guid isPermaLink="true">https://pyeongho.github.io/playstore</guid>
      </item>
      
    
      
      <item>
        <title>기본 레프트 메뉴의 활용</title>
        
          <description>&lt;h3&gt;레프트 메뉴의 다양화&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;애플리케이션 개발 시 디자이너의 메뉴 화면은 여러 개가 있다.&lt;/li&gt;
&lt;li&gt;디자이너가 요청 하는 내용

&lt;ul&gt;
&lt;li&gt;안드로이드 기본 에서 선택 하는 메인 화면을 가리는 형태&lt;/li&gt;
&lt;li&gt;메인 화면을 밀고 가는 내용&lt;/li&gt;
&lt;li&gt;메인 화면이 작아 지면서 메뉴가 나오는 형태&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;위 내용 처럼 대략 3가지 정도로 요약 됨&lt;/li&gt;
&lt;li&gt;처음에는 라이브러리르 찾아서 적용 했는데 뭔지 모르게 버그도 있는거 같고 조금 무거운 느낌도 있다.&lt;/li&gt;
&lt;li&gt;다양한 메뉴가 기본 DrawerLayout 으로 충분히 가능하다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/left_menu</link>
        <guid isPermaLink="true">https://pyeongho.github.io/left_menu</guid>
      </item>
      
    
      
      <item>
        <title>그냥 지식</title>
        
          <description>&lt;h3&gt;PublishSubject , BehaviorSubject 비교&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;PublishSubject : 비어있는 시작하고 구독자에게만 새로운 요소를 방출합니다. PublishSubject가 생성시 즉시 요소를 방출하기 때문에 Subject가 작성되고 관찰자가 등록 할 때 하나 이상의 항목이 손실 될 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/how_phkim</link>
        <guid isPermaLink="true">https://pyeongho.github.io/how_phkim</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 나인패치 그림자 만들어 주는 사이트</title>
        
          <description>&lt;h3&gt;그림자를 빠르게 만들기위한 사이트 링크&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;라운드&lt;/li&gt;
&lt;li&gt;그림자 색상&lt;/li&gt;
&lt;li&gt;블러 사이즈&lt;/li&gt;
&lt;li&gt;위치 오프셋 등 원하는대로 금방 만들수 있어요&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://inloop.github.io/shadow4android/&quot;&gt;그림자만들기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/nine_shadow_link</link>
        <guid isPermaLink="true">https://pyeongho.github.io/nine_shadow_link</guid>
      </item>
      
    
      
      <item>
        <title>야근은 하기 싫은데 일은 잘하고 싶다</title>
        
          <description>&lt;h3&gt;야근은 하기 싫은데 일은 잘하고 싶다&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;뇌에 대한 책&lt;/li&gt;
&lt;li&gt;사람의 뇌는 멀티태스킹을 못한다.&lt;/li&gt;
&lt;li&gt;한번에 할 수 있는 있는 최대 4개 평상시 3개 안좋을때 2개&lt;/li&gt;
&lt;li&gt;그냥 한번에 한 가지 일만 하자&lt;/li&gt;
&lt;li&gt;집중 할 때 한가지 일만 열심히 하자&lt;/li&gt;
&lt;li&gt;집중력이 떨어지는 오후 시간에는 반복적인 작업이 좋다.&lt;/li&gt;
&lt;li&gt;3가지 이상을 기억해야 할때는 메모 하자&lt;/li&gt;
&lt;li&gt;메모를 이용해 해야 할 일을 정리 하자&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/brain_not_multi</link>
        <guid isPermaLink="true">https://pyeongho.github.io/brain_not_multi</guid>
      </item>
      
    
      
      <item>
        <title>트렌드 코리아 2019</title>
        
          <description>&lt;h3&gt;트렌드 코리아 2019 요약 :  PIGGY DREAM&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;P : (컨셉을 연출하라)play the concept&lt;/li&gt;
&lt;li&gt;I : (세포 마켓)invite to the cell market&lt;/li&gt;
&lt;li&gt;G : (요즘 옛날, 뉴트로) going New-tro&lt;/li&gt;
&lt;li&gt;G : (필 환경시대) green survival&lt;/li&gt;
&lt;li&gt;Y : (감정대리인, 내마음을 부탁해) you are my proxy emotion&lt;/li&gt;
&lt;li&gt;D : (데이터 인텔리전스) data intelligence&lt;/li&gt;
&lt;li&gt;R : (공간의 재탄생,카메레존) rebirth of space&lt;/li&gt;
&lt;li&gt;E : (밀레니얼 가족) emerging millennial family&lt;/li&gt;
&lt;li&gt;A : (그곳만이 내세상, 나나랜드) as being myself&lt;/li&gt;
&lt;li&gt;M : (매너소비자) manners make the consumer&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/trendl</link>
        <guid isPermaLink="true">https://pyeongho.github.io/trendl</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 UI 모음</title>
        
          <description>&lt;h3&gt;디자이너가 원하는 라이브러리를 찾아보자&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;앱을 만들다 보면 커스텀 UI 가 필요한 경우가 너무 많다.&lt;/li&gt;
&lt;li&gt;시간이 있는것도 아니고 시간이 있어도 기존에 나온것 보다 잘 만들기 어려우니&lt;/li&gt;
&lt;li&gt;디자이너가 원하는 라이브러리를 찾아서 라이브러를 커스텀 해서 사용하자&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/collect_ui_link</link>
        <guid isPermaLink="true">https://pyeongho.github.io/collect_ui_link</guid>
      </item>
      
    
      
      <item>
        <title>데이터바인딩과 뷰모델</title>
        
          <description>&lt;h3&gt;데이터바인딩을 이용한 뷰모델&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;기존 프로젝트중 화면 하나를 변경&lt;br&gt;&lt;/li&gt;
&lt;li&gt;화면은 viewpager에 이미지 추가(횡으로 한칸 한칸 이동)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LinearLayout 에 현재 이미지 위치를 표시해 주는 포인트 추가&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;이미지 개수가 최대 몇개인지 알수 없는 API 인지라 imageview를 동적 할당 하여 넣어줌 &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;아래가 XML 
&lt;script src=&quot;https://gist.github.com/pyeongho/ae301847d752e8a6fbd7909a4e3632ea.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;뷰모델 
&lt;script src=&quot;https://gist.github.com/pyeongho/7b47e6abfb5f1c8b1ffb03fc5f0d2dcd.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;생각보다 괜찮은 방법으로 보임&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;해야할 작업은 많아 지지만 매우 만족 스러움&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/viewmodel</link>
        <guid isPermaLink="true">https://pyeongho.github.io/viewmodel</guid>
      </item>
      
    
      
      <item>
        <title>kotlin init 사용시 편집기 주의사항</title>
        
          <description>&lt;h3&gt;kotlin constructor , init&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;생성자 사용하면서 사용하는 코틀린 내용입니다.&lt;/li&gt;
&lt;li&gt;참고 &lt;a href=&quot;https://kotlinlang.org/docs/reference/classes.html&quot;&gt;kotlinlang.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;참고 &lt;a href=&quot;https://thdev.tech/kotlin/2017/03/09/Kotlin-Constructor-Init/&quot;&gt;꿈많은 개발자가 되자 Kotlin constructor init 이란?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;문서의 소중함&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The primary constructor cannot contain any code. Initialization code can be placed in initializer blocks, which are prefixed with the init keyword.&lt;br&gt;
During an instance initialization, the initializer blocks are executed in the same order as they appear in the class body, interleaved with the property initializers:&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;파파고 번역&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;기본 생성자는 코드를 포함할 수 없습니다. 초기화 코드는 init 키워드가 앞에 붙는 initializer 블록에 배치할 수 있습니다.&lt;br&gt;
인스턴스 초기화 중에 이니셜라이저 블록은 속성 이니셜라이저와 함께 클래스 본체에 나타나는 것과 동일한 순서로 실행됩니다.(위에서부터 실행 한다.)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;다시 한번 확인 하는 이유는 역시나  NullPointerException&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;아래 코드를 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;script src=&quot;https://gist.github.com/pyeongho/b5aa08641cdfa05a6ca56f18a4d30d3e.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;편집기에서 에러가 발생 하지 않는게 문제&lt;/li&gt;
&lt;li&gt;열심히 문서 보고 공부 했으면 문제가 없었겠지만  nullPoint -&amp;gt; sb.append(&amp;quot; hahaha&amp;quot;) 에서 에러가 발생 한다.&lt;/li&gt;
&lt;li&gt;순서대로 초기화 하기 때무에 val sb = StringBuilder(name) 하기 전에 사용, 널포인트 &lt;/li&gt;
&lt;li&gt;sb.append(&amp;quot; hahaha&amp;quot;) 를 첫번째 init 블럭에 사용하면 에러 표시를 하지만 함수를 이용하면 나타 나지 않는다.&lt;/li&gt;
&lt;li&gt;문서 확인과 편집기 완벽 하지 않음으로 발생하는 내용으로 잘 알고 있어야 합니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/kotlin_init</link>
        <guid isPermaLink="true">https://pyeongho.github.io/kotlin_init</guid>
      </item>
      
    
      
      <item>
        <title>파이썬 텔레그램 봇 만들기</title>
        
          <description>&lt;h3&gt;텔래그램 봇을 이용해서 알림을 만들어 보자&lt;/h3&gt;
</description>
        
        <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/telefram_bot_father</link>
        <guid isPermaLink="true">https://pyeongho.github.io/telefram_bot_father</guid>
      </item>
      
    
      
      <item>
        <title>App Version Name 다양한 방법</title>
        
          <description>&lt;h3&gt;몇명 사용하지도 않는데 왜 앱 버전을 못 가지고 오는 걸까?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;그냥 버전이름과 코드를 가지고 오는 방법으로 아래와 같이 사용하고 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;        &lt;span class=&quot;n&quot;&gt;PackageManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPackageManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;PackageInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPackageInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPackageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packageName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;packageName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;versionCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;versionCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;versionName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;versionName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NameNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;c1&quot;&gt;// TODO Auto-generated catch block&lt;/span&gt;
           &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;특정 기기에서 특정 조건 일때만 죽는 디버깅이 너무 어렵다.&lt;/li&gt;
&lt;li&gt;우선 문제 해결 먼저 진행&lt;/li&gt;
&lt;li&gt;처음에는 하드코딩하 넣었지만 버전 올라갈때마다 같이 변경해줘야 하는 너무나 큰 불편함이 존재함&lt;/li&gt;
&lt;li&gt;그래서 빌드 컨피그를 이용하여 아래와 같이 사용하면 상수 처럼 사용 가능 &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;      /*version name*/
      BuildConfig.VERSION_NAME

      /*version code*/
      BuildConfig.VERSION_CODE

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        
        <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/appVersion</link>
        <guid isPermaLink="true">https://pyeongho.github.io/appVersion</guid>
      </item>
      
    
      
      <item>
        <title>No toolchains found in the NDK</title>
        
          <description>&lt;h3&gt;NDK 를 사용하지 않는데&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 스튜디오 3.2로 업데이트 이후 구 버전 프로젝트 실행 시 아래와 같은 에러가 너무 많이 난다. &lt;/li&gt;
&lt;li&gt;&amp;quot;No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android&amp;quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;나만의 해결&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;그래들 버전 업&lt;/li&gt;
&lt;li&gt;다른 분들은 안될수도 있지만 저는 3.2.1 로 변경하니 NDK 가 더이상 안나옵니다.&lt;/li&gt;
&lt;li&gt;&amp;quot;classpath &amp;#39;com.android.tools.build:gradle:3.2.1&amp;#39;&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/no-ndk</link>
        <guid isPermaLink="true">https://pyeongho.github.io/no-ndk</guid>
      </item>
      
    
      
      <item>
        <title>앱 아이콘 동적 변경</title>
        
          <description>&lt;h3&gt;아이콘을 동적 변경해야 하는일도 있는 세상&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;세상은 어떤일들이 일어 날지 모른다. 앱 아이콘을 조건에 따라 변경하고 싶어 하는 일도 있다.&lt;/li&gt;
&lt;li&gt;정말 가능하다 ㅎㅎ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;동적 아이콘 변경&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/myinnos/AppIconNameChanger&quot;&gt;AppIconNameChanger&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;동작은 github 에 라이브러리가 잘 처리해 줍니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/change-icon</link>
        <guid isPermaLink="true">https://pyeongho.github.io/change-icon</guid>
      </item>
      
    
      
      <item>
        <title>Jetpack 사용을 위한 기초 공부 AAC(ViewModel)</title>
        
          <description>&lt;h3&gt;샘플은 구글&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/android-sunflower&quot;&gt;해바라기&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/android-architecture-components&quot;&gt;구글 샘플&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/topic/libraries/architecture/viewmodel&quot;&gt;ViewModel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;패턴의 변화&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ViewModel클래스는 UI 관련 데이터를 라이프 사이클을 고려한 방식으로 저장하고 관리하도록 설계되었습니다. 이 ViewModel클래스를 사용하면 화면 회전과 같은 구성 변경시에도 데이터를 유지할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;뷰모델&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;뷰모델은 옵저버패턴이라고 이해중&lt;/li&gt;
&lt;li&gt;데이터가 변화 가능한곳에 콜백 같은 옵저버를 추가한다.&lt;/li&gt;
&lt;li&gt;UI 쪽에서 해당 데이터의 콜백을 이용하여 업데이트 한다.&lt;/li&gt;
&lt;li&gt;데이터를 콜백 형태로 묶어 놓기 때문에 위에서 말하는 UI 와 완전 분리가 가능하다.&lt;/li&gt;
&lt;li&gt;예를 들어 특정 데이터가 변경 되면 콜백 발생하도록 하고 콜백에서 UI 업데이트를 처리한다.&lt;/li&gt;
&lt;li&gt;이런 개념으로 이해 함&lt;/li&gt;
&lt;li&gt;BasicRxJavaSampleKotlin 기본으로 공부 중&lt;/li&gt;
&lt;li&gt;콜백을 넣어 주는 부분이 직접접이지 않아 이해 하고 있어야 이해가 된다.&lt;/li&gt;
&lt;li&gt;아래와 같은 코드가 있을 때 Rx 를 이용해서  viewModel.userName()  변화를 감지하여 UI 업데이트 &lt;/li&gt;
&lt;li&gt;클릭 이벤트에서 updateUserName() 를 호출 하면 DB 완료후 결과를 다시 읽어 UI 를 업데이트 함&lt;/li&gt;
&lt;li&gt;하지만 뷰모엘을 이용하면 콜백으로 변경 내용을 확인 하므로 UI 업데이트에 대한 의존성을 없앨수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;      override fun onStart() {
            super.onStart()
            // Subscribe to the emissions of the user name from the view model.
            // Update the user name text view, at every onNext emission.
            // In case of error, log the exception.
            disposable.add(viewModel.userName()
                    .subscribeOn(Schedulers.io())
                    .observeOn(AndroidSchedulers.mainThread())
                    .subscribe({ this.user_name.text = it },
                            { error -&amp;gt; Log.e(TAG, &quot;Unable to get username&quot;, error) }))
        }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        
        <pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/aac_c2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/aac_c2</guid>
      </item>
      
    
      
      <item>
        <title>Jetpack 사용을 위한 기초 공부 AAC(Room)</title>
        
          <description>&lt;h3&gt;샘플은 구글&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/android-sunflower&quot;&gt;해바라기&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/googlesamples/android-architecture-components&quot;&gt;구글 샘플&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/training/data-storage/room/defining-data&quot;&gt;Room 엔터티&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bsidesoft.com/?p=6003&quot;&gt;비사이드소프트&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;샘플 내용 요약&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;sunflower, 구글 AAC 샘플을 적용하기전 기초지식 부터&lt;/li&gt;
&lt;li&gt;짧은 샘플이지만 기본적인 내용부터 알아야 가능 &lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/aac_c1</link>
        <guid isPermaLink="true">https://pyeongho.github.io/aac_c1</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 Jetpack 중 네비게이션 에디터 사용</title>
        
          <description>&lt;h3&gt;안드로이드 Jetpack&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;가중 눈에 가는 네비게이션 에디터를 사용해 보려고 했지만 사용법은 금방 나오지만 어떻게 해야 에디터가 나오는지 안보인다.&lt;/li&gt;
&lt;li&gt;File -&amp;gt; Settings -&amp;gt; Experimental -&amp;gt; Enable Navigation Editor 을 활성화 하자&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/navigation-editor</link>
        <guid isPermaLink="true">https://pyeongho.github.io/navigation-editor</guid>
      </item>
      
    
      
      <item>
        <title>ConstraintLayout 이제 사용 할 듯</title>
        
          <description>&lt;h3&gt;출처&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://android-developers.googleblog.com/2017/08/understanding-performance-benefits-of.html&quot;&gt;구글 블로그 원문&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://abandonia.tistory.com/1&quot;&gt;구글 블로그 번역문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/constraint</link>
        <guid isPermaLink="true">https://pyeongho.github.io/constraint</guid>
      </item>
      
    
      
      <item>
        <title>푸시 내용 업데이트</title>
        
          <description>&lt;h3&gt;푸시 적용&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pyeongho.github.io/push&quot;&gt;https://pyeongho.github.io/push&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;위 글에서 푸시 관련 내용을 작성 하였습니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/push2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/push2</guid>
      </item>
      
    
      
      <item>
        <title>방법을 생각해 보자</title>
        
          <description>&lt;h4&gt;1. 안드로이드 보안을 위한 방법들&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;중요한 정보를 저장 하거나 하드코딩 안하면 되지만 어쩔수 없다면&lt;/li&gt;
&lt;li&gt;아래 내용들은 최대한 지저분하게 여기 저기 막 넣어 둔다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/thinks</link>
        <guid isPermaLink="true">https://pyeongho.github.io/thinks</guid>
      </item>
      
    
      
      <item>
        <title>윈도우즈에서 파이어베이스 CLI 에러</title>
        
          <description>&lt;h3&gt;윈도우즈에서 파이어베이스를 이용해서 개발중 발생한 버그&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;기본적인 파이어베이스 CLI 사용법 아닙니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;firebase deploy 진행중 발생하는 에러&lt;/h4&gt;
</description>
        
        <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/firebase_cli_error</link>
        <guid isPermaLink="true">https://pyeongho.github.io/firebase_cli_error</guid>
      </item>
      
    
      
      <item>
        <title>코틀린 KTX</title>
        
          <description>&lt;h3&gt;코틀린 개발용 확장 라이브러리 KTX 에대한 지극히 개인적인 생각&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;코틀린 KTX 내용 블로그

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://android-developers.googleblog.com/2018/02/introducing-android-ktx-even-sweeter.html?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed%3A+blogspot%2FhsDu+%28Android+Developers+Blog%29&quot;&gt;KTX 안드로이드 구글 블로그 영문&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers-kr.googleblog.com/2018/02/introducing-android-ktx-even-sweeter-kotlin-development-for-android.html&quot;&gt;KTX 안드로이드 구글 블로그 번역리뷰&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/kotlin_ktx</link>
        <guid isPermaLink="true">https://pyeongho.github.io/kotlin_ktx</guid>
      </item>
      
    
      
      <item>
        <title>프로가드라 알차게 사용하기</title>
        
          <description>&lt;h4&gt;1. 코드난독화를 위해서 사용하는 프로가드&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;자세한 프로가드 사용법은 아닙니다.&lt;/li&gt;
&lt;li&gt;패키지 구성을 어떻게 하면 좋을지에 대한 내용입니다.&lt;/li&gt;
&lt;li&gt;프로가드 적용시 패키명과 클래스명이 유지 되는것중 액티비티가 있습니다.&lt;/li&gt;
&lt;li&gt;그렇게 되면 기본적인 구성을 확인 가능하면 그 안에 있는 하위 패키지 이름을 보면서 내용 유추가 가능해 진다.&lt;/li&gt;
&lt;li&gt;아주 간단한 방법으로 액티비티를 따로 모아서 패키지를 만들어서 관리혀면 생각보다 좋다.&lt;/li&gt;
&lt;li&gt;액티비티 뿐만 아니라 클래스명과 패키지명이 유지되어야 하는 내용을 따로 관리하면 생각보다 큰 효과를 얻습니다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://academy.realm.io/kr/posts/jon-reeve-reverse-engineering-is-not-just-for-hackers-android/&quot;&gt;https://academy.realm.io/kr/posts/jon-reeve-reverse-engineering-is-not-just-for-hackers-android/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/pro_guard</link>
        <guid isPermaLink="true">https://pyeongho.github.io/pro_guard</guid>
      </item>
      
    
      
      <item>
        <title>작은가게 성공 매뉴얼</title>
        
          <description>&lt;h4&gt;본것 깨달은것 적용할것&lt;/h4&gt;
</description>
        
        <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/nav_manual</link>
        <guid isPermaLink="true">https://pyeongho.github.io/nav_manual</guid>
      </item>
      
    
      
      <item>
        <title>드로이드나이츠 2019 후기</title>
        
          <description>&lt;h3&gt;드로이드 나이츠 2019 후기&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2017년도 부터 시작된 드로이드 나이츠 운이 좋아 아직까지는 3번 모두 참석&lt;/li&gt;
&lt;li&gt;표는 4월4일에 누군가 취소한 티켓을  겨우 겨우 구매&lt;/li&gt;
&lt;li&gt;올해에는 스티커가 이쁘다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/droid_2919</link>
        <guid isPermaLink="true">https://pyeongho.github.io/droid_2919</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 띵스</title>
        
          <description>&lt;h4&gt;구글 랩스 안드로이드 띵즈&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 띵즈 : 운영체제 이름&lt;/li&gt;
&lt;li&gt;2월24일 구글코라아에서 진행 하는 발표에 참석&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/android_things</link>
        <guid isPermaLink="true">https://pyeongho.github.io/android_things</guid>
      </item>
      
    
      
      <item>
        <title>애플리케이션 Foreground 확인</title>
        
          <description>&lt;h3&gt;애플리케이션이 Foreground 를 확인 해야 할 때는 많습니다.&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 사용자중 홈버튼으로 앱을 종료 시키는 사람이 의외로 많다.&lt;/li&gt;
&lt;li&gt;백그라운드 동작을 허용하지 않기 위해서는 포그라운드 인지 백그라운드 인지 확인을 해야 한다.&lt;/li&gt;
&lt;li&gt;api 26이 나오면서 권한 없이 사용 가능한 방법이 생겼다.&lt;/li&gt;
&lt;li&gt;Application.ActivityLifecycleCallbacks 를 이용하는 방법&lt;/li&gt;
&lt;li&gt;Application 상속받은 클래스에서 위 클래스를 구현해 주면 됩니다. &lt;/li&gt;
&lt;li&gt;사용은 애플리케이션 상속 받은 코드에서 init 을 호출해서 사용하면 됩니다.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/lifecycle</link>
        <guid isPermaLink="true">https://pyeongho.github.io/lifecycle</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 immersive</title>
        
          <description>&lt;h3&gt;갤럭시 s8 의 이상한 기능&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;갤럭시 s8 에서 특정 설정을 하면 소트키가 항상 숨겨지는 모드가 존재 해서 내가 추가한 내용은 아니지만 마치 이머시브 모드 처럼 동작 하는 현상&lt;/li&gt;
&lt;li&gt;애플리케이션 개발 중에는 몰라도 될거 같지만 막상 개발하다 보면 알아야 도움 되는 내용입니다.&lt;/li&gt;
&lt;li&gt;알아야 하는 내용

&lt;ul&gt;
&lt;li&gt;애플리케이션 시작시 소프트키가 활성화 되어 있는지 체크 해야 하는부부&lt;/li&gt;
&lt;li&gt;에플리케이션 실행 중 변경 되는 내용 이렇게 2가지 경우가 있습니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/immersive</link>
        <guid isPermaLink="true">https://pyeongho.github.io/immersive</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 스와이프백</title>
        
          <description>&lt;h3&gt;조금더 편한 액티비 종료&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;손가락으로 드래그하여 액티비티 종료 하는 라이브러리 입니다.&lt;/li&gt;
&lt;li&gt;iOS에서 자주 사용 되지만 안드로이드에서도 사용 할 수 있습니다.&lt;/li&gt;
&lt;li&gt;아래가 오리지널 코드 위치 입니다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/liuguangqiang/SwipeBack&quot;&gt;스와이프백&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;코드분석은 setContentView 를 할때 루트에 스와이프 레이아웃을 추가하여 터치 이벤트를 전역으로 사용 할 수 있게 하여 드래그로 액티비티를 종료 할 수 있도록 한 라이브러리 입니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/swipe_back</link>
        <guid isPermaLink="true">https://pyeongho.github.io/swipe_back</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 네스티드 웹뷰</title>
        
          <description>&lt;h3&gt;웹뷰와 네이티브의 연동시 꼭필요한 웹뷰 확장&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;웹뷰를 스크롤 하면 툴바가 사라지거나 &lt;/li&gt;
&lt;li&gt;BottomSheet 에 웹뷰를 추가 했으때도 RecyclerView 처럼 스크롤 되는걸 원할 때 &lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/nested_webview.1</link>
        <guid isPermaLink="true">https://pyeongho.github.io/nested_webview.1</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 TextView Padding 문제</title>
        
          <description>&lt;h3&gt;디자인가이드를 적용하면서 문제가 발생하는 부분은 역시 TextView 패딩&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;TextView로 구성된 화면에서 마진으로 간격이 조정된 디자인 가이드를 받으면 생각 했던거 보다 간격이 훨씬 벌어짐&lt;/li&gt;
&lt;li&gt;처음에 적용 했던 내용은 includeFontPadding을 false 로 적용 함&lt;br&gt;&lt;/li&gt;
&lt;li&gt;약간 줄어 들긴 하지만 완벽 하게 적용 되진 않았습니다.&lt;/li&gt;
&lt;li&gt;아래 이미지&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1nnjL0afBO2rmZOXJzbi95P6lef2XWRA-&quot; alt=&quot;이렇게&quot;&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/no_padding_textview</link>
        <guid isPermaLink="true">https://pyeongho.github.io/no_padding_textview</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 알쓸신잡 1</title>
        
          <description>&lt;h3&gt;NavigationView 상단 그림자&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 기본 메뉴를 사용중에 아래와 같은 요구 사항이 들어 올때 처리 방법

&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;https://drive.google.com/uc?export=view&amp;amp;id=1mN322WnoJSJWKYxHEQIT5Cl4ynUxKK46&quot; alt=&quot;이렇게&quot;&gt;&lt;/li&gt;
&lt;li&gt;for tag:  NavigationView remove shadow &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;처음에는 DrawerLayout, NavigationView 속성을 열심히 찾음

&lt;ul&gt;
&lt;li&gt;DrawerLayout의 StatusBar 은 투명하게 되고, 메뉴 나올때 그림자도 제거 가능&lt;/li&gt;
&lt;li&gt;정작 하고 싶음 NavigationView 상단 statusbar 그림자가 남아 있음&lt;/li&gt;
&lt;li&gt;NavigationView 코드를 확인 하면서 발생한 생각 상다바 만큼 알파값을 위에 추가한 느낌&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;설마 하면서 NavigationView marginTop 을 -24dp 로 설정하니 그림자가 안보임 &lt;/li&gt;
&lt;li&gt;그래서 내린 알쓸신잡 NavigationView 에서 상단에 알파값을 주기 때문에 상태바 만큼 위로 올려 버리니 동작 &lt;/li&gt;
&lt;li&gt;&lt;p&gt;24만큼 올렸으니 컨텐츠는 24만큼 내려야 합니다. 아래 처럼 android:layout_marginTop=&amp;quot;-24dp&amp;quot; 발견하기 까지 많은 시간이 걸렸습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;android.support.design.widget.NavigationView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/nav_view&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-24dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_gravity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;start&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:fitsSystemWindows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:headerLayout=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@layout/nav_header_main&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:menu=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@menu/activity_main_drawer&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/tips1</link>
        <guid isPermaLink="true">https://pyeongho.github.io/tips1</guid>
      </item>
      
    
      
      <item>
        <title>파이썬을 크로스도메인 허용</title>
        
          <description>&lt;h3&gt;플라스크에서 크로스도메인 허용&lt;/h3&gt;
</description>
        
        <pubDate>Wed, 22 Nov 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/flaskcross</link>
        <guid isPermaLink="true">https://pyeongho.github.io/flaskcross</guid>
      </item>
      
    
      
      <item>
        <title>Shared elements</title>
        
          <description>&lt;h3&gt;머티리얼 화면 전환, Shared Elements&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;플레이스토어에서 앱을 선택하면 리스트의 이미지가 스르르하면서 커지면서 화면 전환이 발생&lt;/li&gt;
&lt;li&gt;처음에는 엄청난 라이브러리를 사용한지 알았지만 안드로이드 기본을 이용하면 된다.&lt;/li&gt;
&lt;li&gt;안드로이는 구현보다 무엇을 사용하지만 알면 금방 적용 할수 있습니다. &lt;/li&gt;
&lt;li&gt;일단 처음 발견한 링크 입니다.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@bherbst/fragment-transitions-with-shared-elements-7c7d71d31cbb&quot;&gt;fragment-transitions-with-shared-elements&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;위 링크를 보고 사용하는 내용이 shared-elements 라는것을 알고 사용하기로 함&lt;/li&gt;
&lt;li&gt;5.0 이상만 가능하지만 이제는 5.0 미만에서의 애니메이션은 신경 안쓰기로 결정함 &lt;/li&gt;
&lt;li&gt;shared-elements 를 키워드로 검색&lt;/li&gt;
&lt;li&gt;안드로이드 개발자 사이트 참고 링크

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/training/material/animations.html?hl=ko&quot;&gt;https://developer.android.com/training/material/animations.html?hl=ko&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;다른 사람이 만든 공부하기 쉬운 샘플코드

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mikescamell/shared-element-transitions&quot;&gt;https://github.com/mikescamell/shared-element-transitions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;프래그먼트에서 프래그먼트로 이동할 때 만 적어 보겠습니다.

&lt;ul&gt;
&lt;li&gt;각각의 상황에 맞는 내용은 위 링크 샘플에 잘 정리 되어 있습니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A 프래그먼트에 이미지 뷰를 추가&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ImageView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/logo&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@mipmap/ic_launcher_round&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_centerInParent=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:transitionName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;simple_fragment_transition&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;android:transitionName 속성이 2번째 프래그먼트에도 동일하게 사용됩니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A 프래그먼트 에서 B 프래그먼트 생성 및 A 프래그먼트 삭제 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;참고 addToBackStack(TAG) 을 이용해서 뒤로가기 가능하도록 가능합니다.(플레이스토어 처럼 반대 애니메이션 동작 합니다.)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/sharedelements</link>
        <guid isPermaLink="true">https://pyeongho.github.io/sharedelements</guid>
      </item>
      
    
      
      <item>
        <title>롤리팝 이상에서 백그라운드 푸시 보내기</title>
        
          <description>&lt;h3&gt;백그라운드 푸시 적용&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;롤리팝 이상에서 앱이 백그라운드 상태에서는 푸시를 수신하는 코드가 동작 하지 않고 운영체제에서 알림을 발생시킨다.&lt;/li&gt;
&lt;li&gt;파이어베이스 콘솔에서 푸시를 발송하면 OS 에서만 수신 

&lt;ul&gt;
&lt;li&gt;이유를 찾아 보니 푸시 메시지 notification 이 있을 때 앱에서 푸시를 수신 안하고 OS 가 처리함&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;notification 영역을 제거하고 페이로드 영역(data) 부분만 으로 푸시를 보내면 됩니다.&lt;/li&gt;
&lt;li&gt;커스텀 푸시는 아니지만 노티 알림 클릭시 원하는 동작을 만들고 싶을때가 많다.&lt;/li&gt;
&lt;li&gt;그래서 푸시 규격에 대해서 자세히 찾아 봄

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/cloud-messaging/http-server-ref?hl=ko&quot;&gt;https://firebase.google.com/docs/cloud-messaging/http-server-ref?hl=ko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;위 링크에서 보면 click_action 이 존재 하고 하고 이를 이용하면 시작 액티비티를 지정이 가능하다.&lt;/li&gt;
&lt;li&gt;그래서 서버쪽 전송 영역을 아래 처러 지정 하였습니다.
&lt;code&gt;json
data: {
  hello: &amp;quot;good job&amp;quot;,
},
notification: {
  title: &amp;quot;Hello, World&amp;quot;,
  body: &amp;quot;This is a notification that will be displayed if your app is in the background.&amp;quot;,
  click_action:&amp;quot;OPEN_ACTIVITY_1&amp;quot;,
  icon:&amp;quot;white&amp;quot;,
  color:&amp;quot;#FF0000&amp;quot;,
  sound:&amp;quot;default&amp;quot;
}
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 22 Jul 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/push</link>
        <guid isPermaLink="true">https://pyeongho.github.io/push</guid>
      </item>
      
    
      
      <item>
        <title>osx 도커</title>
        
          <description>&lt;h3&gt;개발공부도 도커에서 하기&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;이런 저런 이유로 도커는 공부해 놓으면 좋을거 같습니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/docker</link>
        <guid isPermaLink="true">https://pyeongho.github.io/docker</guid>
      </item>
      
    
      
      <item>
        <title>로그를 편하게 사용하자</title>
        
          <description>&lt;h3&gt;Log. 사용이 귀찮을때가 많아서 사용중인 클래스를 공유합니다.&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Log -&amp;gt; log 로 변경해서 대문자를 사용안한다.&lt;/li&gt;
&lt;li&gt;TAG 입력이 귀찮아서 제거함&lt;/li&gt;
&lt;li&gt;파일이름과 라인 함수 이름을 출력 하도록 함&lt;/li&gt;
&lt;li&gt;릴리즈에서는 로그가 출력 안되도록 하였습니다.&lt;/li&gt;
&lt;li&gt;그리고 가장 많이 사용하는 라인 출력 함수를 추가 하였습니다. log.l() &lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 06 Jun 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/log</link>
        <guid isPermaLink="true">https://pyeongho.github.io/log</guid>
      </item>
      
    
      
      <item>
        <title>Dagger2 기초 부터</title>
        
          <description>&lt;h3&gt;Dagger2 활용을 위하여&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;기본을 공부하기에는 이곳 만큼 좋은곳은 없는거 같습니다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pluu.github.io/blog/android/2017/01/13/android-dagger/&quot;&gt;http://pluu.github.io/blog/android/2017/01/13/android-dagger/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 30 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/re-dagger2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/re-dagger2</guid>
      </item>
      
    
      
      <item>
        <title>코틀린 안드로이드 익스텐션</title>
        
          <description>&lt;h3&gt;findviewid 는 안했으면 ...&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;코틀린에서도 사용 가능한 방법&lt;/li&gt;
&lt;li&gt;코틀린 안드로이드 익스텐션&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/kotlin_android_extensions</link>
        <guid isPermaLink="true">https://pyeongho.github.io/kotlin_android_extensions</guid>
      </item>
      
    
      
      <item>
        <title>웹에서 앱 설치 여부를 확인하자</title>
        
          <description>&lt;h3&gt;Web 에서 앱 설치 여부를 확인 하자&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;시나리오는 페이지가 안보이면 document.webkitHidden 과 document.hidden 으로 확인이 가능하다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/API/Page_Visibility_API&quot;&gt;https://developer.mozilla.org/ko/docs/Web/API/Page&lt;em&gt;Visibility&lt;/em&gt;API&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;2개인 이유는 정식 스크립트 등록으로 인해서라고 풍문으로 들었습니다.&lt;/li&gt;
&lt;li&gt;하지만 문제점은 매우 많습니다. 구현 내용을 보면 알 수 있습니다. 왜 문제가 많은지 

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devtalk.kakao.com/t/topic/20684/3&quot;&gt;https://devtalk.kakao.com/t/topic/20684/3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;1. 내용&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;인터벌 함수를 이용해서 hidden 을 계속 확인한다.&lt;/li&gt;
&lt;li&gt;타임아웃 함수를 이용해서 특정시간이 되면 앱이 설치 안되어있다고 판단한다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/app_check</link>
        <guid isPermaLink="true">https://pyeongho.github.io/app_check</guid>
      </item>
      
    
      
      <item>
        <title>코를린 공부를 intellij 에서</title>
        
          <description>&lt;h3&gt;안드로이드 공식 언어인 코틀릭 공부&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 스튜디오가 아닌 인텔리제이 에서 공부&lt;/li&gt;
&lt;li&gt;기본 적인 언어 공부후 안드로이드 스튜디오에서 진행&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/kotlin_with_intellij</link>
        <guid isPermaLink="true">https://pyeongho.github.io/kotlin_with_intellij</guid>
      </item>
      
    
      
      <item>
        <title>RemoteConfig FirebaseRemoteConfigFetchThrottledException</title>
        
          <description>&lt;h3&gt;파이어베이스 리모트 컨피그 사용&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;앱 수정 없이 API 서버 사용 유무를 선택 하는 기능을 만들려고함&lt;/li&gt;
&lt;li&gt;공지나 강제 업데이트 기능을 이걸로 하면 좋을거 같음&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/firebase_remoteconfig</link>
        <guid isPermaLink="true">https://pyeongho.github.io/firebase_remoteconfig</guid>
      </item>
      
    
      
      <item>
        <title>대한민국 부동산의 미래</title>
        
          <description>&lt;h4&gt;본것 깨달은것 적용할것&lt;/h4&gt;
</description>
        
        <pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/nav_real_estate</link>
        <guid isPermaLink="true">https://pyeongho.github.io/nav_real_estate</guid>
      </item>
      
    
      
      <item>
        <title>Rx 사용하면서 추가하거나 공부한 내용</title>
        
          <description>&lt;h3&gt;rx 라이브러리를 사용하면서 사용하는 함수들&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;간단하게 성남도서관 검색 앱을 개발하면서 사용하는 함수들 입니다.&lt;/li&gt;
&lt;li&gt;rxbiding 사용법&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/use-rx-android</link>
        <guid isPermaLink="true">https://pyeongho.github.io/use-rx-android</guid>
      </item>
      
    
      
      <item>
        <title>Daum 이미지 검색을 내가 좋아하는 형태로 변경해 보자</title>
        
          <description>&lt;h3&gt;구글 샘플과 GDG-ATSL-ON-MVP를 이용&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2개의 코드 모두 너무 좋지만 앞으로를 위해서 필요한 부분을 변경해 보려고 합니다. 남들이 보면 이상해 보일수도 있겠지만 구조와 라이브러리르 조금 추가 및 변경해서 원하는 형태로 변경합니다.&lt;/li&gt;
&lt;li&gt;원래 코드도 좋지만 이상하게 마음에 안드는 부분을 변경해보려고 합니다.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ZeroBrain/GDG-ATSL-ON-MVP&quot;&gt;https://github.com/ZeroBrain/GDG-ATSL-ON-MVP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/my-clean-mvp</link>
        <guid isPermaLink="true">https://pyeongho.github.io/my-clean-mvp</guid>
      </item>
      
    
      
      <item>
        <title>이미지를 호스팅을 드랍박스로 변경해 보자</title>
        
          <description>&lt;h4&gt;구글 드라이브는 이상하게 사파리에서 정상 동작을 안한다.&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;드랍박스를 이용해서 링크를 가지고 오는 방법을 만들어 보자&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/github-image-dropbox</link>
        <guid isPermaLink="true">https://pyeongho.github.io/github-image-dropbox</guid>
      </item>
      
    
      
      <item>
        <title>Github Page 스태틱으로 변경하기</title>
        
          <description>&lt;h4&gt;테마를 변경하면서 스택으로 변경하기로 결정&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;테마변경을 적용중 원하는 카테고리 동작이 안되어서 찾아보니 특정 폴더를 추가해야 하는걸 알았습니다. 그래서 이것 저것 찾다가 결국은 스태틱 사이트로 변경 하기로 결정&lt;/li&gt;
&lt;li&gt;목표 설정

&lt;ul&gt;
&lt;li&gt;저장소 위치를 비트버켓으로 이동한다.&lt;/li&gt;
&lt;li&gt;지킬로 빌드후 결과물을 pyeongho.github.io 로 올린다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 29 Apr 2017 20:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/github-static</link>
        <guid isPermaLink="true">https://pyeongho.github.io/github-static</guid>
      </item>
      
    
      
      <item>
        <title>비트버켓에서 파이프라인을 이용한 자동 배포</title>
        
          <description>&lt;h4&gt;자동배포시스템 적용하기&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;github 를 이용할때는 travis 를 이용하려 햐였지만 비트버켓으로 이동하면서 최종적으로 비트버켓 내의 시스템을 이용함&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 29 Apr 2017 12:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/bitbucket-deploy</link>
        <guid isPermaLink="true">https://pyeongho.github.io/bitbucket-deploy</guid>
      </item>
      
    
      
      <item>
        <title>미라클 모닝,당신의 하루를 바꾸는 기적</title>
        
          <description>&lt;h4&gt;본것 깨달은것 적용할것&lt;/h4&gt;
</description>
        
        <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/navi_morning</link>
        <guid isPermaLink="true">https://pyeongho.github.io/navi_morning</guid>
      </item>
      
    
      
      <item>
        <title>구글에서 만든 클린 아키텍처를 이해하고 알아보자</title>
        
          <description>&lt;h3&gt;구글 클린 아키텍처&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;mvp 패턴만 적용 하더라도 구조가 이상해 보인다. 어떻게 하면 좀더 좋은 구조를 만들 수 있을까를 고민하던 중 클린아키텍처가 있었고 그중 구글이 만들 샘플 코드가 기본 라이브러리로만 만들어져서 마음에 들어서 분석하기 시작함&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/google-todo-clean</link>
        <guid isPermaLink="true">https://pyeongho.github.io/google-todo-clean</guid>
      </item>
      
    
      
      <item>
        <title>크롬 40+ 버전에서 의 앱 실행 문제</title>
        
          <description>&lt;h3&gt;크롬에서 사용자 제스처 없이 앱 실행은 안됩니다.&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;탐색할수없음&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/chrome-40</link>
        <guid isPermaLink="true">https://pyeongho.github.io/chrome-40</guid>
      </item>
      
    
      
      <item>
        <title>GRIT IQ, 재능 환경을 뛰어 넘는 열정적 끈기의 힘 그릿</title>
        
          <description>&lt;h4&gt;본것 깨달은것 적용할것&lt;/h4&gt;
</description>
        
        <pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/navi_grit</link>
        <guid isPermaLink="true">https://pyeongho.github.io/navi_grit</guid>
      </item>
      
    
      
      <item>
        <title>클린아키텍처 듣기 전부터 고민하던 내용들</title>
        
          <description>&lt;h4&gt;적용에 앞서 많은 고민중&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;고민은 좋은거.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/whywhy</link>
        <guid isPermaLink="true">https://pyeongho.github.io/whywhy</guid>
      </item>
      
    
      
      <item>
        <title>드로이드나이츠 클린아키텍처 세션</title>
        
          <description>&lt;h4&gt;드로이드나이츠 클린아키텍처&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;드로이드나이츠 컨퍼런스 참가후 작성한 글 입니다.&lt;/li&gt;
&lt;li&gt;그중 기억에 남는 클린 아키텍처를 정리 하였습니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/clean-acrhitecture</link>
        <guid isPermaLink="true">https://pyeongho.github.io/clean-acrhitecture</guid>
      </item>
      
    
      
      <item>
        <title>구글 드라이브를 이용해서 쉽게 이미지를 올리자</title>
        
          <description>&lt;h4&gt;맥에서 github page 이미지 쉽게 올리기&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;깃허브 페이지를 이용중 가장 힘든건 스크린샷을 추가하는 방법이라 생각해서 찾아보니 구글드라이브를 이미지서버로 사용이 가능해서 적용해 보았습니다. 문제는 사파리에서 정상동작 안한다는 단점&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/google-drive-for-image</link>
        <guid isPermaLink="true">https://pyeongho.github.io/google-drive-for-image</guid>
      </item>
      
    
      
      <item>
        <title>gitugb.io 지킬에 사진업로드 쉽게 하는 앱개발</title>
        
          <description>&lt;h3&gt;iOS 에서 github.io에 사진을 첨부한 글을 포스팅한다.&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;스마튼폰에서 찍은 사진을 블로그에 바로 올리고 싶은 생각으로 앱을 개발해 보기로 결정&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;1. 공부할 자료 수집&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;깃 라이브러리 

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/libgit2/objective-git#carthage&quot;&gt;https://github.com/libgit2/objective-git#carthage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/SwiftGit2/SwiftGit2&quot;&gt;https://github.com/SwiftGit2/SwiftGit2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; carthage 사용법을 알아야 한다.

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://swifter.kr/2016/04/24/carthage-%EC%B9%B4%EB%A5%B4%ED%85%8C%EC%A7%80-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95/&quot;&gt;https://swifter.kr/2016/04/24/carthage-카르테지-설치-방법/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/ios_git_client</link>
        <guid isPermaLink="true">https://pyeongho.github.io/ios_git_client</guid>
      </item>
      
    
      
      <item>
        <title>github page 구글 검색 허용하기</title>
        
          <description>&lt;h4&gt;지킬로 만들면 구글 검색이 안됩니다.&lt;/h4&gt;
</description>
        
        <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/google-search</link>
        <guid isPermaLink="true">https://pyeongho.github.io/google-search</guid>
      </item>
      
    
      
      <item>
        <title>파이썬을 이용한 서버구축</title>
        
          <description>&lt;h3&gt;클라우드 서버 구축&lt;/h3&gt;
</description>
        
        <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/flask</link>
        <guid isPermaLink="true">https://pyeongho.github.io/flask</guid>
      </item>
      
    
      
      <item>
        <title>java 디자인패턴 4일차</title>
        
          <description>&lt;h3&gt;GoF 의 자바 디자인 패턴, 인프런 강의&lt;/h3&gt;

&lt;h4&gt;코드 링크&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parkgaram/java-designpattern&quot;&gt;https://github.com/parkgaram/java-designpattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 18 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/gof-4</link>
        <guid isPermaLink="true">https://pyeongho.github.io/gof-4</guid>
      </item>
      
    
      
      <item>
        <title>스위프트를 이용해서 앱을 개발해 보자(iOS 공부 1일차)</title>
        
          <description>&lt;h3&gt;iOS를 공부해서 원하는 앱을 만들어 보자&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 개발자지만 iOS 앱을 만들어 보고 싶어서 공부를 시작&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;0. 따라하기&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devxoul.gitbooks.io/ios-with-swift-in-40-hours/content/Chapter-1/&quot;&gt;https://devxoul.gitbooks.io/ios-with-swift-in-40-hours/content/Chapter-1/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/ios_1</link>
        <guid isPermaLink="true">https://pyeongho.github.io/ios_1</guid>
      </item>
      
    
      
      <item>
        <title>RxJava</title>
        
          <description>&lt;h3&gt;RxJava 이해하기&lt;/h3&gt;

&lt;h4&gt;공부 링크&lt;/h4&gt;
</description>
        
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/rx</link>
        <guid isPermaLink="true">https://pyeongho.github.io/rx</guid>
      </item>
      
    
      
      <item>
        <title>java 디자인패턴 3일차</title>
        
          <description>&lt;h3&gt;GoF 의 자바 디자인 패턴, 인프런 강의&lt;/h3&gt;

&lt;h4&gt;코드 링크&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parkgaram/java-designpattern&quot;&gt;https://github.com/parkgaram/java-designpattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/gof-3</link>
        <guid isPermaLink="true">https://pyeongho.github.io/gof-3</guid>
      </item>
      
    
      
      <item>
        <title>java 디자인패턴 2일차</title>
        
          <description>&lt;h3&gt;GoF 의 자바 디자인 패턴, 인프런 강의&lt;/h3&gt;

&lt;h4&gt;코드 링크&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parkgaram/java-designpattern&quot;&gt;https://github.com/parkgaram/java-designpattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 26 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/gof-2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/gof-2</guid>
      </item>
      
    
      
      <item>
        <title>java 디자인패턴 1일차</title>
        
          <description>&lt;h3&gt;GoF 의 자바 디자인 패턴, 인프런 강의&lt;/h3&gt;

&lt;h4&gt;코드 링크&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parkgaram/java-designpattern&quot;&gt;https://github.com/parkgaram/java-designpattern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/gof-1</link>
        <guid isPermaLink="true">https://pyeongho.github.io/gof-1</guid>
      </item>
      
    
      
      <item>
        <title>제네릭을 이용하여 샘플코드를 좀더 편하게 사용하기</title>
        
          <description>&lt;h3&gt;최종코드의 BasePresnter의 addSubscription를 부분만 확인하면 됩니다.&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;API가 추가 될때마다 계속 추가해야하나?&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/retrofit2-generic</link>
        <guid isPermaLink="true">https://pyeongho.github.io/retrofit2-generic</guid>
      </item>
      
    
      
      <item>
        <title>AndroidAnnotation을 공부 하자</title>
        
          <description>&lt;h3&gt;안드로이드에서 AndroidAnnotation을 이용해서 앱을 개발해 보자&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;어노테이션 기능으로 좀금더 편하게 의존성을 주입해서 앱을 개발하는 방법 입니다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://androidannotations.org/&quot;&gt;http://androidannotations.org/ 공식사이트&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Tue, 14 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/AndroidAnnotation</link>
        <guid isPermaLink="true">https://pyeongho.github.io/AndroidAnnotation</guid>
      </item>
      
    
      
      <item>
        <title>dagger2 를 공부</title>
        
          <description>&lt;h4&gt;DI 공부&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;라이브러리를 이용해서 의존성을  주입하는 방법&lt;/li&gt;
&lt;li&gt;그냥 플래버를 이용해도 되지만 좀더 많은 사람들이 사용하는 방법&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 12 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/dagger2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/dagger2</guid>
      </item>
      
    
      
      <item>
        <title>mvp 패턴을 공부하자</title>
        
          <description>&lt;h3&gt;안드로이드에 mvp를 적극적으로 추가하기 위한 공부중&lt;/h3&gt;
</description>
        
        <pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/mvp</link>
        <guid isPermaLink="true">https://pyeongho.github.io/mvp</guid>
      </item>
      
    
      
      <item>
        <title>retrofit2 + rxandroid2 + mvp 네이버 기계번역 사용하기</title>
        
          <description>&lt;h4&gt;retrofit2 + rxandroid2 + mvp 를 이용한 통신&lt;/h4&gt;
</description>
        
        <pubDate>Fri, 10 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/retrofit2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/retrofit2</guid>
      </item>
      
    
      
      <item>
        <title>버터나이프 없이 조금더 편하게 XML 의 객체를 사용해 보자</title>
        
          <description>&lt;h4&gt;findViewById 없이 사용하기&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;앱을 만들면서 항상해야 하고 코드가 안 이쁘게 보이는걸 데이터 바인딩으로 해결해 보자&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/no_more_findviewid</link>
        <guid isPermaLink="true">https://pyeongho.github.io/no_more_findviewid</guid>
      </item>
      
    
      
      <item>
        <title>retrofit2 + okhttp3 + rxandroid2네이버 기계번역 사용하기</title>
        
          <description>&lt;h3&gt;retrofit2 + rxandroid2 를 이용한 통신&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;rxandroid2 를 추가해 보았습니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/retrofit2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/retrofit2</guid>
      </item>
      
    
      
      <item>
        <title>retrofit2 + okhttp3 네이버 기계번역 사용하기</title>
        
          <description>&lt;h3&gt;retrofit2 를 이용한 통신&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;가장 많이 사용되는 통신라이브러리를 이용해서 네이버기계 번역 앱을 만들어 보았습니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 04 Feb 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/retrofit2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/retrofit2</guid>
      </item>
      
    
      
      <item>
        <title>RxAndroid2 를 이용해서 앱을 만들어 보자</title>
        
          <description>&lt;h4&gt;1. RxAndroid2 를 이용한 샘플 앱을 만들어 보면서 RxAndroid 에 적응해 보자&lt;/h4&gt;
</description>
        
        <pubDate>Sun, 22 Jan 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/rxandroid_1</link>
        <guid isPermaLink="true">https://pyeongho.github.io/rxandroid_1</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 WebView 53 SSL 버그</title>
        
          <description>&lt;h4&gt;1. 안드로이드 WebView 53 에서 ssl 에러가 발생한 이유&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;webview 버전 53 에서 인증서 버그&lt;/li&gt;
&lt;li&gt;여기 저기에서 문제 발생에 대한 공지 내용 

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://channel.daum.net/content/232337?dmp_channel=notice&quot;&gt;다음 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sir.kr/co_notice/1205&quot;&gt;KG 이니시스 공지&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;에러 내용은 webview 버전 53 일때 ssl 인증서 오류가 발생한다.

&lt;ul&gt;
&lt;li&gt;정확히 symantec 인증서 에서만 오류가 발생 한다고 한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;해결 방법은 다음의 공지 처럼 크롬 업데이트나 웹뷰 업데이트 설치 말고는 방법이 없다&lt;/li&gt;
&lt;li&gt;그래도 테스트를 내용을 확인 해야 마음이 편하다. 구글 에서도 인증서 오류 관련 팝업을 넣어야 한다고 공지함&lt;/li&gt;
&lt;li&gt;구글의 공지도 있고 해서 테스틀 진행함 &lt;/li&gt;
&lt;li&gt;테스트를 위해서 테스트 기기에 webview 53 버전을 설치함 &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.apkmirror.com/apk/google-inc/android-system-webview/android-system-webview-53-0-2785-97-release/&quot;&gt;webview 53 다운로드 경로&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;구글에서 추가 해야한다고 하는  ssl error 팝업을 아래와 같이 추가함
&lt;script src=&quot;https://gist.github.com/pyeongho/66a50062921216dfae7a1abb9e8cb94e.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/webview-53</link>
        <guid isPermaLink="true">https://pyeongho.github.io/webview-53</guid>
      </item>
      
    
      
      <item>
        <title>EditText 를 이용한 RecyclerView 검색 기능</title>
        
          <description>&lt;h4&gt;1. EditText에서 한두 글자를 입력하면 리스트에서 해당 결과를 보여주는 방법&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;RecyclerView 에 검색 기능을 추가하여 한두 글자를 입력으로 원하는 결과만 확인 하는 방법&lt;/li&gt;
&lt;li&gt;RecyclerView에 원하는 내용만 출력하기&lt;/li&gt;
&lt;li&gt;기본 내용은 &lt;a href=&quot;http://jizard.tistory.com/53&quot;&gt;http://jizard.tistory.com/53&lt;/a&gt; 블로그를 참조 했습니다.&lt;/li&gt;
&lt;li&gt;리스트2개를 가지고  contain 에 포함 된것만 보여주는 형태 입니다.&lt;/li&gt;
&lt;li&gt;중요한 코드는 아래와 같습니다.
&lt;script src=&quot;https://gist.github.com/pyeongho/fbe79093772cfa1b62fc3f97659bdaed.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/edit_search</link>
        <guid isPermaLink="true">https://pyeongho.github.io/edit_search</guid>
      </item>
      
    
      
      <item>
        <title>jekyll 댓글 추가 하기</title>
        
          <description>&lt;h4&gt;1. Disqus 를 이용하여 댓글 기능을 추가, 순서는 크게 3단계&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Disqus 가입하기&lt;/li&gt;
&lt;li&gt;Disqus 설정하기&lt;/li&gt;
&lt;li&gt;github 연동하기&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/add-comment</link>
        <guid isPermaLink="true">https://pyeongho.github.io/add-comment</guid>
      </item>
      
    
      
      <item>
        <title>안드로이드 스튜디오 한글 깨짐</title>
        
          <description>&lt;h4&gt;1. 안드로이드 스튜디오 2.X 버전에서 한글깨짐 수정&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 스튜디오 최신버전에서 레이아웃 미리보기에서 한글깨짐 현상 수정&lt;/li&gt;
&lt;li&gt;안드로이드 스튜디오가 설치된 경로 내의 다음 파일을 확인합니다. (OS X의 경우 안드로이드 스튜디오 실행파일을 오른쪽 선택한 후 ‘Show Package contents’로 하위 폴더 탐색 가능)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;아래가 경로 입니다.&lt;/p&gt;

&lt;p&gt;// Windows
{Android Studio 설치경로}/plugins/android/lib/layoutlib/data/fonts/fonts.xml&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 09 Jan 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/studio-korean</link>
        <guid isPermaLink="true">https://pyeongho.github.io/studio-korean</guid>
      </item>
      
    
      
      <item>
        <title>파이어베이스 데이터베이스를  사용해보자</title>
        
          <description>&lt;h4&gt;1. firebase database 를 사용해 보자&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 스튜디오 에서 tools -&amp;gt; firebase 를 클릭한다.&lt;/li&gt;
&lt;li&gt;firebase 관련 메뉴들이 나오는데 사용 할 realtime database 를 선택&lt;/li&gt;
&lt;li&gt;기본 firebase가 연결되어 있다고 나옴 &lt;/li&gt;
&lt;li&gt;firebase authentication 문서를 미리 진행 하면 connected 로 변경 됩니다.&lt;/li&gt;
&lt;li&gt;연결 안되어 있으면 connect 클릭해 주세요&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/firebase2</link>
        <guid isPermaLink="true">https://pyeongho.github.io/firebase2</guid>
      </item>
      
    
      
      <item>
        <title>파이어베이스를 사용해보자</title>
        
          <description>&lt;h4&gt;1. firebase authentication 를 사용해 보자&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;안드로이드 스튜디오 에서 tools -&amp;gt; firebase 를 클릭한다.&lt;/li&gt;
&lt;li&gt;firebase 관련 메뉴들이 나오는데 사용 할 authentication 선택 한다. &lt;/li&gt;
&lt;li&gt;영어지만 설명서 대로 진행 한다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/firebase1</link>
        <guid isPermaLink="true">https://pyeongho.github.io/firebase1</guid>
      </item>
      
    
      
      <item>
        <title>butterknife 라이브러리 사용</title>
        
          <description>&lt;h3&gt;butterknife 를 사용해 보자&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JakeWharton/butterknife&quot;&gt;butterknife github&lt;/a&gt;&lt;/p&gt;
</description>
        
        <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/butterknifr</link>
        <guid isPermaLink="true">https://pyeongho.github.io/butterknifr</guid>
      </item>
      
    
      
      <item>
        <title>OWASP top 10 항목을 이용한 취약점 확인</title>
        
          <description>&lt;h4&gt;1. Mobile OWASP Top 10 ( 2014)&lt;/h4&gt;
</description>
        
        <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/mobile-sec.-owasp</link>
        <guid isPermaLink="true">https://pyeongho.github.io/mobile-sec.-owasp</guid>
      </item>
      
    
      
      <item>
        <title>APK 바이너리 분석 및 리패키징</title>
        
          <description>&lt;h3&gt;4. APK 바이너리 분석 및 리패키징&lt;/h3&gt;

&lt;h4&gt;1.첨부된 apk 의 코드를 확인 한다.&lt;/h4&gt;
</description>
        
        <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/mobile-sec-reverse</link>
        <guid isPermaLink="true">https://pyeongho.github.io/mobile-sec-reverse</guid>
      </item>
      
    
      
      <item>
        <title>andorid 취약점</title>
        
          <description>&lt;h4&gt;2. 국내 모바일 앱 보안점검 체크리스트&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://wikisecurity.net/etc:%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0_%EA%B8%88%EC%9C%B5%EC%95%88%EC%A0%84%EB%8C%80%EC%B1%85_%EC%9D%B4%ED%96%89%EC%8B%A4%ED%83%9C_%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8&quot;&gt;스마트폰 금융안전대책 이행 실태 체크리스트&lt;/a&gt;&lt;/p&gt;
</description>
        
        <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/mobile-sec-domestic</link>
        <guid isPermaLink="true">https://pyeongho.github.io/mobile-sec-domestic</guid>
      </item>
      
    
      
      <item>
        <title>모바일앱 보안코딩</title>
        
          <description>&lt;h3&gt;andorid-java 시큐어 코딩 가이드&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
        
        <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/mobile-sec-coding</link>
        <guid isPermaLink="true">https://pyeongho.github.io/mobile-sec-coding</guid>
      </item>
      
    
      
      <item>
        <title>python 모듈 만들기,python C 모듈 원형</title>
        
          <description>&lt;h3&gt;python 사용 할 C 라이브러리 만들기&lt;/h3&gt;
</description>
        
        <pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/pythonClib</link>
        <guid isPermaLink="true">https://pyeongho.github.io/pythonClib</guid>
      </item>
      
    
      
      <item>
        <title>mysql 사용법</title>
        
          <description>&lt;h3&gt;리눅스에서 mysql 사용하기&lt;/h3&gt;
</description>
        
        <pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/mysql</link>
        <guid isPermaLink="true">https://pyeongho.github.io/mysql</guid>
      </item>
      
    
      
      <item>
        <title>python 에서 사용할 C 엑셀 모듈 만들기</title>
        
          <description>&lt;h3&gt;python에서 사용 할 C 모듈 만들기&lt;/h3&gt;
</description>
        
        <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
        <link>
        https://pyeongho.github.io/xls</link>
        <guid isPermaLink="true">https://pyeongho.github.io/xls</guid>
      </item>
      
    
  </channel>
</rss>
