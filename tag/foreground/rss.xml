<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>pyeongho.github.io</title>
   
   <link>https://pyeongho.github.io</link>
   <description>즐거운 공장</description>
   <language>en-uk</language>
   <managingEditor> PyeongHo</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>안드로이드 앱 상태(foreground, background)</title>
	  <link>//app</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-03-12T00:00:00+00:00</pubDate>
	  <guid>//app</guid>
	  <description><![CDATA[
	     <h3 id="section">외부에서 앱을 실행 하거나 푸시 도착 했을때 앱 상태가 필요 한 경우가 있습니다.</h3>
<ul>
  <li>Foreground 라는 클래스를 사용 했지만 라이프 사이클을 이용하면 쉽게 처리 가능합니다.</li>
</ul>

<h3 id="section-1">라이프 사이클 클래스</h3>
<ul>
  <li>상태는 3개로 실행 안됨</li>
  <li>백그라운드</li>
  <li>포그라운드 <br />
<script src="https://gist.github.com/pyeongho/5a3a3bcfa25b9b85e1dd4c3a6d474c2b.js"></script></li>
</ul>

<h3 id="section-2">애플리케이션 클래스에 추가</h3>
<ul>
  <li>앱에서 사용하는 애플리케이션 클래스를 상속 받은 곳에서 아래 내용을 추가해서 활성화 한다.</li>
</ul>

<div class="highlighter-rouge"><pre class="highlight"><code>ProcessLifecycleOwner.get()
            .lifecycle
            .addObserver(OnAppObserver())

</code></pre>
</div>

<h3 id="section-3">유의사항</h3>
<ul>
  <li>아래 내용 참고 해서 원하는상태를 체크해서 동작 하면 됩니다.</li>
  <li>외부 딥링크에서 앱 호출시 포그라운드 동작한다.
    <ul>
      <li>스키마로 앱을 실행하면서 백그라운드에서 포그라운드로 변경되면서 포그라운드 동작</li>
    </ul>
  </li>
</ul>


	  ]]></description>
	</item>

	<item>
	  <title>애플리케이션 Foreground 확인</title>
	  <link>//lifecycle</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-02-12T00:00:00+00:00</pubDate>
	  <guid>//lifecycle</guid>
	  <description><![CDATA[
	     <h3 id="foreground------">애플리케이션이 Foreground 를 확인 해야 할 때는 많습니다.</h3>
<ul>
  <li>안드로이드 사용자중 홈버튼으로 앱을 종료 시키는 사람이 의외로 많다.</li>
  <li>백그라운드 동작을 허용하지 않기 위해서는 포그라운드 인지 백그라운드 인지 확인을 해야 한다.</li>
  <li>api 26이 나오면서 권한 없이 사용 가능한 방법이 생겼다.</li>
  <li>Application.ActivityLifecycleCallbacks 를 이용하는 방법</li>
  <li>Application 상속받은 클래스에서 위 클래스를 구현해 주면 됩니다.</li>
  <li>사용은 애플리케이션 상속 받은 코드에서 init 을 호출해서 사용하면 됩니다.</li>
  <li>

    <div class="language-kotlin highlighter-rouge"><pre class="highlight"><code>
    <span class="kd">class</span> <span class="nc">OnApplication</span><span class="p">:</span> <span class="n">Application</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">override</span> <span class="k">fun</span> <span class="nf">onCreate</span><span class="p">()</span> <span class="p">{</span>
            <span class="k">super</span><span class="p">.</span><span class="n">onCreate</span><span class="p">()</span>
            <span class="n">Foreground</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="k">this</span><span class="p">)</span>
                
        <span class="p">}</span>
    <span class="p">}</span>

</code></pre>
    </div>
  </li>
  <li>애프리케이션 생성자에서 클래스를 초기화 합니다.</li>
  <li>싱글톤 클래스라서 사용은 편하게 하시면 됩니다. 아래 처럼 원하는걸로 편하게 사용하면 됩니다.
    <ul>
      <li>Foreground.get().isBackground</li>
      <li>Foreground.get().appStatus</li>
    </ul>
  </li>
  <li>전체 코드는 아래에 있습니다.
    <ul>
      <li>간단한 동작 설명
        <ul>
          <li>onActivityStarted 추가 되면 카운트 +1</li>
          <li>onActivityStopped 추가 되면 카운트 -1</li>
          <li>카운트가 0 이면 백그라운드</li>
          <li>카운트가 1 보다 크면 포그라운드</li>
          <li>카운트가 1 이면 포그라운드 전환</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<script src="https://gist.github.com/pyeongho/59944e4e9e8d76f45c6f395dccd1d8e8.js"></script>


	  ]]></description>
	</item>


</channel>
</rss>
