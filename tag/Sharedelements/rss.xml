<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>pyeongho.github.io</title>
   
   <link>https://pyeongho.github.io</link>
   <description>즐거운 공장</description>
   <language>en-uk</language>
   <managingEditor> PyeongHo</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Shared elements</title>
	  <link>//sharedelements</link>
	  <author>PyeongHo</author>
	  <pubDate>2017-11-21T00:00:00+00:00</pubDate>
	  <guid>//sharedelements</guid>
	  <description><![CDATA[
	     <h3 id="shared-elements">머티리얼 화면 전환, Shared Elements</h3>
<ul>
  <li>플레이스토어에서 앱을 선택하면 리스트의 이미지가 스르르하면서 커지면서 화면 전환이 발생</li>
  <li>처음에는 엄청난 라이브러리를 사용한지 알았지만 안드로이드 기본을 이용하면 된다.</li>
  <li>안드로이는 구현보다 무엇을 사용하지만 알면 금방 적용 할수 있습니다.</li>
  <li>일단 처음 발견한 링크 입니다.
    <ul>
      <li><a href="https://medium.com/@bherbst/fragment-transitions-with-shared-elements-7c7d71d31cbb">fragment-transitions-with-shared-elements</a></li>
    </ul>
  </li>
  <li>위 링크를 보고 사용하는 내용이 shared-elements 라는것을 알고 사용하기로 함</li>
  <li>5.0 이상만 가능하지만 이제는 5.0 미만에서의 애니메이션은 신경 안쓰기로 결정함</li>
  <li>shared-elements 를 키워드로 검색</li>
  <li>안드로이드 개발자 사이트 참고 링크
    <ul>
      <li><a href="https://developer.android.com/training/material/animations.html?hl=ko">https://developer.android.com/training/material/animations.html?hl=ko</a></li>
    </ul>
  </li>
  <li>다른 사람이 만든 공부하기 쉬운 샘플코드
    <ul>
      <li><a href="https://github.com/mikescamell/shared-element-transitions">https://github.com/mikescamell/shared-element-transitions</a></li>
    </ul>
  </li>
  <li>프래그먼트에서 프래그먼트로 이동할 때 만 적어 보겠습니다.
    <ul>
      <li>각각의 상황에 맞는 내용은 위 링크 샘플에 잘 정리 되어 있습니다.</li>
    </ul>
  </li>
  <li>
    <p>A 프래그먼트에 이미지 뷰를 추가</p>

    <p>``` xml</p>
    <ImageView android:id="@+id/logo" android:src="@mipmap/ic_launcher_round" android:layout_centerInParent="true" android:transitionName="simple_fragment_transition" android:layout_width="wrap_content" android:layout_height="wrap_content" />

    <p>```</p>

    <ul>
      <li>android:transitionName 속성이 2번째 프래그먼트에도 동일하게 사용됩니다.</li>
    </ul>
  </li>
  <li>A 프래그먼트 에서 B 프래그먼트 생성 및 A 프래그먼트 삭제
    <ul>
      <li>참고 addToBackStack(TAG) 을 이용해서 뒤로가기 가능하도록 가능합니다.(플레이스토어 처럼 반대 애니메이션 동작 합니다.)</li>
    </ul>

    <div class="language-kotlin highlighter-rouge"><pre class="highlight"><code>  <span class="kd">val</span> <span class="py">mainFragment</span> <span class="p">=</span> <span class="n">MainFragment</span><span class="p">.</span><span class="n">newInstance</span><span class="p">(</span><span class="s">""</span><span class="p">)</span>
  <span class="n">supportFragmentManager</span>
            <span class="p">.</span><span class="n">beginTransaction</span><span class="p">()</span>
            <span class="p">.</span><span class="n">addSharedElement</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">ViewCompat</span><span class="p">.</span><span class="n">getTransitionName</span><span class="p">(</span><span class="n">img</span><span class="p">))</span>
            <span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">intro</span><span class="p">)</span>
            <span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="n">R</span><span class="p">.</span><span class="n">id</span><span class="p">.</span><span class="n">contentFrame</span><span class="p">,</span> <span class="n">mainFragment</span><span class="p">)</span>                
            <span class="p">.</span><span class="n">commit</span><span class="p">()</span>
</code></pre>
    </div>
  </li>
  <li>여기서 중요한건 아래 내용입니다.
    <ul>
      <li>.addSharedElement(img, ViewCompat.getTransitionName(img))</li>
      <li>img 는 A 프래그먼트의 ImageView 객체 입니다.</li>
      <li>메소드명처럼 엘레먼트를 전달하여 B 프래그먼트에서 활용 하는걸로 보입니다</li>
    </ul>
  </li>
  <li>B 프래그먼트
    <ul>
      <li>onCreate 생성자에 아래 내용을 추가해 줍니다.</li>
      <li>transition.move 를 수정하면 다양한 효과가 있을거라 생각하지만 move 로 충분 했습니다.</li>
    </ul>

    <div class="language-kotlin highlighter-rouge"><pre class="highlight"><code>    <span class="k">override</span> <span class="k">fun</span> <span class="nf">onCreate</span><span class="p">(</span><span class="n">savedInstanceState</span><span class="p">:</span> <span class="n">Bundle</span><span class="p">?)</span> <span class="p">{</span>
        <span class="k">super</span><span class="p">.</span><span class="n">onCreate</span><span class="p">(</span><span class="n">savedInstanceState</span><span class="p">)</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Build</span><span class="p">.</span><span class="n">VERSION</span><span class="p">.</span><span class="n">SDK_INT</span> <span class="p">&gt;=</span> <span class="n">Build</span><span class="p">.</span><span class="n">VERSION_CODES</span><span class="p">.</span><span class="n">LOLLIPOP</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">sharedElementEnterTransition</span> <span class="p">=</span> <span class="n">TransitionInflater</span><span class="p">.</span><span class="n">from</span><span class="p">(</span><span class="n">context</span><span class="p">).</span><span class="n">inflateTransition</span><span class="p">(</span><span class="n">android</span><span class="p">.</span><span class="n">R</span><span class="p">.</span><span class="n">transition</span><span class="p">.</span><span class="n">move</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre>
    </div>

    <ul>
      <li>B 프래그먼트에 이미지뷰 추가</li>
      <li>이번에도 transitionName 필드에 주의해 주세요</li>
      <li>
        <p>사이즈를 고정한건 이동하면서 객체가 작아지는걸 볼려고 추가한 내용입니다.</p>

        <p>``` xml</p>
      </li>
    </ul>
    <ImageView android:layout_centerHorizontal="true" android:id="@+id/fragment_b_imaged" android:layout_width="30dp" android:layout_height="30dp" android:scaleType="centerCrop" android:src="@mipmap/ic_launcher_round" android:transitionName="simple_fragment_transition" tools:ignore="UnusedAttribute" />

    <p>```
- 여기까지 추가 하면 기본적인 동작을 확인 가능합니다.
- 좀더 많은 내용은 중간에 추가된 샘플이 좋습니다.</p>
  </li>
</ul>


	  ]]></description>
	</item>


</channel>
</rss>
