<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>pyeongho.github.io</title>
   
   <link>https://pyeongho.github.io</link>
   <description>즐거운 공장</description>
   <language>en-uk</language>
   <managingEditor> PyeongHo</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>intellij 계열 인증서 오류 수정</title>
	  <link>//ssl</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-11-27T00:00:00+00:00</pubDate>
	  <guid>//ssl</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://m.blog.naver.com/PostView.nhn?blogId=youzang7&amp;logNo=221192794441&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F">intellij Server Certificates 문제</a></li>
</ul>

<h3>안드로이드 스튜디오 , intellij 등을 사용시 뜬금 없이 나오는 인증서 오류 문제</h3>

<ul>
<li>아래와 같은 에러들로 빌드 에러가 발샐할 때 (일반적이지는 않아요)

<ul>
<li>PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException</li>
<li>Server&#39;s Certificate is not trusted pop-up</li>
</ul></li>
</ul>

<h3>참고 사이트</h3>

<ul>
<li>3개 정도의 방법입니다. 저는 사내 인증서 허용 방법으로 해결 했습니다. 마지막 방법은 실패해서 정리는 안했습니다.</li>
</ul>

<h2>설정 변경</h2>

<ul>
<li> SSL 통신 관련 옵션을 해제

<ul>
<li>File &gt; Settings &gt; Tools &gt; Server Certificates &gt; Accept non-trusted certificates automatically 체크</li>
<li>저는 실패 했습니다.</li>
</ul></li>
</ul>

<h2>사내 인증서 허용</h2>

<ul>
<li>회사내 인증서 및 self 인증서가 존재한다면 다음과 같이 진행한다.</li>
<li>저는 이걸로 성공 했습니다.</li>
<li>경로 : C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.1\jbr\lib\security</li>
<li>해당 경로의 파일들은 따로 백업</li>
<li>keytool ‐keystore cacerts ‐importcert ‐alias HQSSL ‐file HQSSL.cer 실행 (password : changeit , HQSSL.cer 사내 인증서 파일로 대체)</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>코를린 공부를 intellij 에서</title>
	  <link>//kotlin_with_intellij</link>
	  <author>PyeongHo</author>
	  <pubDate>2017-05-23T00:00:00+00:00</pubDate>
	  <guid>//kotlin_with_intellij</guid>
	  <description><![CDATA[
	     <h3>안드로이드 공식 언어인 코틀릭 공부</h3>

<ul>
<li>안드로이드 스튜디오가 아닌 인텔리제이 에서 공부</li>
<li>기본 적인 언어 공부후 안드로이드 스튜디오에서 진행</li>
</ul>

<h4>0. 목적</h4>

<ul>
<li>기본적인 문법및 사용법을 익혀 보자
-<a href="http://thdev.tech/categories.html#Kotlin-ref">http://thdev.tech/categories.html#Kotlin-ref</a></li>
</ul>

<h4>1. 인텔리제이에서 코틀린 실습하기</h4>

<ul>
<li><a href="https://news.realm.io/kr/news/kotlin-1/">https://news.realm.io/kr/news/kotlin-1/</a></li>
<li>인텔리제이 실행</li>
<li>Create New Project</li>
<li>kotlin(java)</li>
<li>create -&gt; use library from plugin 체크</li>
<li>상단 오른쪽 위에 SDK 선택에서 </li>
<li>JDK -&gt; 설치된 JDK 폴더 경로 입력</li>
<li>next </li>
<li>프로젝트 이름 설정</li>
<li>빈 프로젝트 생성 완료</li>
<li>src 폴더에서 오른쪽 버튼 </li>
<li>new -&gt; kotling file/class 선택</li>
<li>app 파일 생성(app.kt)</li>
<li>아래 처럼 메인 코드 입력</li>
</ul>
<div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">   fun main(args: Array&lt;String&gt;) {
    println("Hello Hello!")
  }
</code></pre></div>
<ul>
<li>app.kt 파일에서 마우스 오른쪽 버튼으로 run app.kt 실행 </li>
<li>실행 창에 메인 함수 실행을 확인 할 수 있습니다.</li>
</ul>

<h4>2. 기본 내용을 확인 하기</h4>

<ul>
<li><a href="http://theeye.pe.kr/archives/tag/%EC%BD%94%ED%8B%80%EB%A6%B0">http://theeye.pe.kr/archives/tag/%EC%BD%94%ED%8B%80%EB%A6%B0</a></li>
<li><p>코틀린 함수 사용   </p>

<ul>
<li><p>첫번째 두번째 함수는 그럭 저럭 넘어가면 되고
```kotlin
fun sum(a:Int , b:Int): Int{
  return a+b
}</p>

<p>// Single Expression Function 이런건 사용하지 말자 한 두줄  줄인다고 코드가 좋아질거 같진 않다.
fun sum2(a:Int , b:Int) = a+b</p>

<p>fun printSum(a:Int, b:Int):Unit {
    print(a+b)
}
```</p></li>
<li><p>세번째 함수  Unit를 void 라고 생각하자</p>

<ul>
<li> 코드의 내부 구현은 println을 한번 호출했을 뿐 어떤 결과를 반환한다거나 하는것을 생각하기 어렵습니다. 이런 경우에 println은 Unit을 리턴합니다. 이런 부분은 Scala와 비슷한 부분이 있어 보입니다. Kotlin은 모든 함수 구현이 반환값을 가지며 return을 명시적으로 써줄수도 생략할 수 도 있습니다. 반환이 없어 보이는 코드의 경우에는 Unit을 리턴하며 이 Unit은 Java의 void와 같다고 생각하시면 됩니다. 사실은 반환값이 없는경우를 Unit을 리턴한다고 생각하시면 될 것 같습니다.</li>
</ul></li>
</ul></li>
<li><p>변수 선언 </p>

<ul>
<li>상수는 val</li>
<li><p>변수는 var<br>
```kotlin
// Immutable
val a: Int = 1
val b = 1
val c: Int
c = 1</p>

<p>// Mutable
var x = 5
x += 1
```</p></li>
</ul></li>
<li><p>조건문 </p>

<ul>
<li>자바 처럼 기본 조건문을 사용하자</li>
</ul></li>
<li><p>null   </p>

<ul>
<li><div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">val x: String = null // error
val x: String? = null // ok

val x:Int? = 3
x + 4 // error
if (x != null) x + 4 // ok

val x: Int? = null
val y: Int = x ?: 0  //  x ? x : 0
x?.rangeTo(3) // null
y.rangeTo(3) // 0..3
</code></pre></div></li>
<li><p>x?.rangeTo(3) 를 이용하면 체인형 함수 실행에 유리 하나의 결과만 널이라도 바로 null 반환</p></li>
</ul></li>
<li><p>types Any</p>

<ul>
<li>컴파일러가 고생이 많아 보입니다.</li>
<li>obj is String 만 성공해도 다음 블럭에서는 obj 가 문자열 클래스 이다.</li>
<li>if 문 조건은 왼쪽 부터 실행 된다.
```kotlin<br>
fun getStringLength(obj: Any): Int? {
if (obj is String) // 여기서 obj가 자동으로 String으로 캐스팅됩니다.
  return obj.length
return null // 여기는 여전히 obj의 타입은 Any입니다.
}</li>
</ul>

<p>if (obj !is String) { return ... }
  return obj.length</p>

<p>if (obj is String &amp;&amp; obj.length &gt; 0) { ... }</p>

<p>var x: Any = &quot;hello&quot;
  println(x) // hello가 출력</p>

<p>x = 3
  println(x) // 3이 출력
```</p></li>
<li><p>반목문 및 콜렉션 </p>

<ul>
<li>람다 가능</li>
</ul>
<div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">  //val collection: List&lt;String&gt; = ...
  val collection: MutableList&lt;String&gt; = ArrayList()
  collection.add("1")
  collection.add("2")
  collection.add("3")
  collection.add("4")
  collection.add("5")

  val array = arrayListOf&lt;String&gt;()
  array.add("11")
  array.add("12")
  array.add("13")

  for (element in collection)
    println(element)

  var i = 0
  while (i &lt; collection.size())
    println(collection[i++])

  collection.forEach { e -&gt; println(e) }
  collection.forEach { println(it) }
</code></pre></div></li>
<li><p>when</p>

<ul>
<li>Any 타입일때 케이스문처럼 사용이 가능한다.
<code>kotlin
fun cases(obj: Any) {
when (obj) {
1 -&gt; print(&quot;One&quot;)
&quot;Hello&quot; -&gt; print(&quot;Greeting&quot;)
is Long -&gt; print(&quot;Long&quot;)
!is String -&gt; print(&quot;Not a string&quot;)
else -&gt; print(&quot;Unknown&quot;)
}
}
</code></li>
</ul></li>
<li><p>범위(range) 사용하기w</p>

<ul>
<li>```
if (x in 1..y-1)
 print(&quot;OK&quot;)</li>
</ul>

<p>for (x in 1..5)
     print(x)
  ```   </p></li>
</ul>

<h4>3. 지속적인 공부가 필요함</h4>

<ul>
<li>현재 여기까지 진행하고 조금씩 앱을 만들어 보도록 하겠습니다.</li>
<li>코틀린 문서 링크 입니다.</li>
<li><a href="http://javacan.tistory.com/entry/Korea-Kotlin-Ref-Doc">http://javacan.tistory.com/entry/Korea-Kotlin-Ref-Doc</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
