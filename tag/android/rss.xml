<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>pyeongho.github.io</title>
   
   <link>https://pyeongho.github.io</link>
   <description>즐거운 공장</description>
   <language>en-uk</language>
   <managingEditor> PyeongHo</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>TextView 에 setTextAppearance 모든 속성은 동작하지 않는다. 주의해야 한다.</title>
	  <link>//textview_setTextAppearance</link>
	  <author>PyeongHo</author>
	  <pubDate>2021-07-30T00:00:00+00:00</pubDate>
	  <guid>//textview_setTextAppearance</guid>
	  <description><![CDATA[
	     <h3>TextView setTextAppearance 동작 확인하기</h3>

<ul>
<li>lineSpacingMultiplier 이 동작하지 않아서 확인 작업을 했습니다.</li>
<li>setTextAppearance 를 이용해서 TextView 의 스타일을 적용할때 몇몇 속성이 동작 안하는 걸 확인 할 수 있다.</li>
<li><p>setTextAppearance 를 따라가다 보면 모든 속성이없다.</p>

<ul>
<li>TextView 의 코드의 setTextAppearance 따라가다 보면 아래와 같은 함수를 만나는데 setTextAppearance 관련 내용이 없다.</li>
<li><script src="https://gist.github.com/pyeongho/fe4db5c76404c43877424ce99132e6ff.js"></script></li>
</ul></li>
<li><p>아래는 동작 가능한 속성들을 정리해 보았습니다.
<script src="https://gist.github.com/pyeongho/b369691948ee30c4918d175b6212fe11.js"></script></p></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>TextView 에 LeadingMarginSpan 들여쓰기 및 이미지 배치</title>
	  <link>//textview_leadingmargin</link>
	  <author>PyeongHo</author>
	  <pubDate>2021-07-19T00:00:00+00:00</pubDate>
	  <guid>//textview_leadingmargin</guid>
	  <description><![CDATA[
	     <h3>TextView 에 문단 들여 쓰기 및 이미지 배치 관련 디자인이 들어 올수 있습니다.</h3>

<ul>
<li><img src="http://drive.google.com/uc?export=view&amp;id=1yH8gvaJWOt0bEzz98YpMnj6YWl1GPdWz" alt=""></li>
<li>간단 합니다. LeadingMarginSpan 만 기억하고 있으면 적용하기 쉽습니다.</li>
<li><p>들여쓰기 기능이라서 아래 처럼 사용 하면 됩니다.
<script src="https://gist.github.com/pyeongho/2b2e21f254b5fd173f456afced74218d.js"></script></p></li>
<li><p>first = 200 =&gt; 들여쓰기 픽셀</p></li>
<li><p>rest = 1 =&gt; 단락의 나머지줄 들여쓰기 (the indent for the remaining lines of the paragraph)</p></li>
<li><p>start = 0, end =  1, flags = 0 =&gt; span 의 인자값</p></li>
<li><p>end =  1 이 왜 1인지 궁금해 할수 있습니다. 이는 디자인상 요청 사항으로 두번째 문단은 들여쓰기가 안되어야 해서 입니다.</p></li>
<li><p>일반적인 들여쓰기에서는 길이를 넣으면 됩니다.</p></li>
</ul>

<h3>참고</h3>

<ul>
<li><a href="https://developer.android.com/reference/android/text/style/LeadingMarginSpan">https://developer.android.com/reference/android/text/style/LeadingMarginSpan</a></li>
<li><a href="https://developer.android.com/reference/android/text/style/LeadingMarginSpan.Standard">https://developer.android.com/reference/android/text/style/LeadingMarginSpan.Standard</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>웹뷰 사용시 비동기 주의 사항(뷰바인딩 사용)</title>
	  <link>//webview_async</link>
	  <author>PyeongHo</author>
	  <pubDate>2021-07-05T00:00:00+00:00</pubDate>
	  <guid>//webview_async</guid>
	  <description><![CDATA[
	     <h3>웹뷰 사용시 비동기 처리를 주의 해야 합니다.</h3>

<ul>
<li>웹뷰는 제어 함수들은 콜백 형태로 함수를 제공해 주고 있습니다.</li>
<li>크롬 클라이언트나 , 웹뷰클라이언트의 함수를 오버라이딩 해서 많이 사용 할 것입니다.</li>
<li>예를 들어서 페이지 로딩이 완료된 이후 동작을 처리하기 위해서 웹뷰 클라이언트의 onPageFinished 사용을 가정 합니다.</li>
<li>onPageFinished 함수에 화면 UI 제어 함수를 추가 합니다. (onPageFinished -&gt; binding.loading.isVisible = false)</li>
<li>binding 은 뷰바인딩 입니다. 구글원하는 대로 아래 처럼 사용하면 에러가 발생 합니다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  private var _binding: xxxxxxxxxBinding? = null
  val binding get() = _binding!!

  override fun onDestroyView() {
          super.onDestroyView()
          _binding = null
      }
</code></pre></div>
<ul>
<li>위와 같이 사용시 크래시는 항상 재현 시킬 수 있습니다.</li>
<li>해당 웹뷰 접근 -&gt; 페이지 완료 전에 해당 화면 종료 -&gt; 약간 기다림(페이지 완료 될때 까지) -&gt; 크래시</li>
<li>매우 당연한 결과 입니다. 해당 화면이 이미 종료 되어  onDestroyView 가 실행 되었고 이후에 onPageFinished 가 실행 되었습니다.</li>
<li>그래서 binding.loading.isVisible = false 를 실행 하려면 크래시가 발생 되기 때문입니다.</li>
</ul>

<h3>웹뷰 콜백을 받아서 처리 할 때는 웹뷰 처리를 신경써서 해야 합니다.</h3>

<ul>
<li>화면이 종료 될때 웹뷰도 같이 종료 시키던지(onDestroyView 에서 binding.webview.destroy())</li>
<li>화면종료 후에 UI 처리 할때 예외를 추가(try catch )</li>
<li>꼭 신경 써야 합니다.</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 빌드 실패 with github actions</title>
	  <link>//gradle_action</link>
	  <author>PyeongHo</author>
	  <pubDate>2021-06-30T00:00:00+00:00</pubDate>
	  <guid>//gradle_action</guid>
	  <description><![CDATA[
	     <h3>깃허브 액션을 CI/CD 를 사용하던 중 랜덤으로 빌드 실패가 발생</h3>

<ul>
<li>깃허브 액션 + 패스트레인 을 이용해서 자동화 빌드를 사용하고 있습니다.</li>
<li>처음에는 별다른 이슈 없이 잘 사용 하고 있었습니다. 최근 한달전 정도 부터 빌드 실패가 발생하기 시작 했습니다.</li>
<li>정말 빌드 실패가 아닌 재시도 하면 성공 하는 이상한일이 발생하기 시작 했습니다.</li>
<li>빌드 로그를 보아도 딱히 이유를 알수가 없었습니다.</li>
<li>gradle 빌드에 로그를 추가해서(stacktrace , debug) 확인을 했습니다. 아래와 같은 로그만 남아 있었습니다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  org.gradle.launcher.daemon.client.DaemonDisappearedException: Gradle build daemon disappeared unexpectedly (it may have been killed or may have crashed)
</code></pre></div>
<ul>
<li>데몬이 없어 졌다고 해서 그래들옵션에 no-daemon 을 추가해 보았지만 그래도 에러는 지속 되었습니다.</li>
<li>(https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners)[https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners]</li>
<li>깃허브 액션에 대해서 조금만 더 알아보기로 하였습니다.</li>
<li>일단 깃허브 액션의 머신 스펙을 확인 하였습니다. 그런데 스펙에 보이는 마음에 들지 않는 숫자 메모리 7기가</li>
<li><p>설마 설마 그래들 속성을 확인 했습니다. 역시나 아래 처럼 최대 메모리가 8기가로 설정 되어 있었습니다.
<code>
org.gradle.jvmargs=-Xms4096m -Xmx8192m -XX:MaxPermSize=1024m
</code></p></li>
<li><p>여러분도 원인 모를 actions 의 빌드 실패가 발생하면 메모리를 확인해 보세요</p></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 리뷰 요청하기</title>
	  <link>//review</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-09-23T00:00:00+00:00</pubDate>
	  <guid>//review</guid>
	  <description><![CDATA[
	     <h3>안드로이드도 리뷰를 요청 할 수 있습니다.</h3>

<ul>
<li><a href="https://developer.android.com/guide/playcore/in-app-review">https://developer.android.com/guide/playcore/in-app-review</a></li>
</ul>

<h3>사용법</h3>

<ul>
<li>참고 문서에도 있지만 천천히 따라하기</li>
<li>의존성 주입 :  implementation &#39;com.google.android.play:core-ktx:1.8.1&#39;</li>
<li><p>추가 코드 : 결과 처리 예외 처리 역시 가능함</p>

<ul>
<li></li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">    val manager = ReviewManagerFactory.create(context)
    val request = manager.requestReviewFlow()
    request.addOnCompleteListener { request -&gt;
        if (request.isSuccessful) {
            // We got the ReviewInfo object
            val reviewInfo = request.result
        } else {
            // There was some problem, continue regardless of the result.
        }
    }  
</code></pre></div></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 fastlane 빌드</title>
	  <link>//fastlane</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-09-10T00:00:00+00:00</pubDate>
	  <guid>//fastlane</guid>
	  <description><![CDATA[
	     <h3>azure, fastlane</h3>

<ul>
<li><p>azure</p>

<ul>
<li>회원가입</li>
<li>파이프라인 생성</li>
<li>깃허브 연결</li>
<li>yml 파일 생성(자동생성 사용)</li>
<li>필요에 따라 내용 추가</li>
</ul></li>
<li><p>fastlane</p>

<ul>
<li>안드로이드 앱 루트 폴더로 이동</li>
<li>fastlane init 실행

<ul>
<li>json 파일은 플레이콘솔 액세스 용으로 콘솔에서 생성 가능</li>
</ul></li>
</ul></li>
</ul>

<h3>참고</h3>

<ul>
<li><a href="https://dev-yakuza.github.io/ko/react-native/fastlane/">https://dev-yakuza.github.io/ko/react-native/fastlane/</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 앱 상태(foreground, background)</title>
	  <link>//app</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-03-12T00:00:00+00:00</pubDate>
	  <guid>//app</guid>
	  <description><![CDATA[
	     <h3>외부에서 앱을 실행 하거나 푸시 도착 했을때 앱 상태가 필요 한 경우가 있습니다.</h3>

<ul>
<li>Foreground 라는 클래스를 사용 했지만 라이프 사이클을 이용하면 쉽게 처리 가능합니다.</li>
</ul>

<h3>라이프 사이클 클래스</h3>

<ul>
<li>상태는 3개로 실행 안됨</li>
<li>백그라운드</li>
<li>포그라운드<br>
<script src="https://gist.github.com/pyeongho/5a3a3bcfa25b9b85e1dd4c3a6d474c2b.js"></script></li>
</ul>

<h3>애플리케이션 클래스에 추가</h3>

<ul>
<li>앱에서 사용하는 애플리케이션 클래스를 상속 받은 곳에서 아래 내용을 추가해서 활성화 한다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">ProcessLifecycleOwner.get()
            .lifecycle
            .addObserver(OnAppObserver())

</code></pre></div>
<h3>유의사항</h3>

<ul>
<li>아래 내용 참고 해서 원하는상태를 체크해서 동작 하면 됩니다.</li>
<li>외부 딥링크에서 앱 호출시 포그라운드 동작한다.

<ul>
<li>스키마로 앱을 실행하면서 백그라운드에서 포그라운드로 변경되면서 포그라운드 동작 </li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 adid 가져오기</title>
	  <link>//adid</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-02-25T00:00:00+00:00</pubDate>
	  <guid>//adid</guid>
	  <description><![CDATA[
	     <h3>앱을 개발하다 보면 adid 를 가져와야 하는 일도 있습니다.</h3>

<ul>
<li>최종적으로 사용할 함수는 아래와 같습니다. </li>
<li>비동기 처리는 필수 입니다.</li>
<li>그리고 의존성도 추가 해야 합니다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  AdvertisingIdClient.getAdvertisingIdInfo(context).getId()
</code></pre></div>
<h3>추가 내용 및 최종 카드</h3>

<ul>
<li>의존성 이름은 아래와 같으면 버전은 선택해서 넣으면 됩니다. </li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  implementation 'com.google.android.gms:play-services-ads:18.3.0'

</code></pre></div>
<ul>
<li>대충 코드는 아래와 같으면 어싱크 태스크 등을 이용하셔도 됩니다.</li>
<li>AdvertisingIdClient.getAdvertisingIdInfo(context).getId()  함수를 비동기로 사용 하면 됩니다.</li>
</ul>
<div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">
    Observable.just(context)
            .map {AdvertisingIdClient.getAdvertisingIdInfo(it).getId()}
            .subscribeOn(Schedulers.io())
            .subscribe(
                    {
                        log.d("adid  "+it)
                    },
                    {
                        log.e(it.message)
                    },
                    {}
            )

</code></pre></div>
	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 5.0 ~ 5.1 Error inflating class android.webkit.WebView (21~22)</title>
	  <link>//androidx_webview</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-02-07T00:00:00+00:00</pubDate>
	  <guid>//androidx_webview</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://stackoverflow.com/questions/57783707/webview-inflateexception">https://stackoverflow.com/questions/57783707/webview-inflateexception</a></li>
</ul>

<h3>androidx 에서 Error inflating class android.webkit.WebView 에러 발생</h3>

<ul>
<li>롤리팝 버전에서 해당 에러로 앱 크래시</li>
</ul>

<h3>콜라보레이션</h3>

<ul>
<li>androidx.appcompat:appcompat:1.1.0</li>
<li>com.google.android.material:material:1.1.0</li>
<li>위 2개의 라이브러리의 콜라브레이션으로 에러 발생  1.1.0 이 2개모두 추가되어 있으면 100% 크래시(롤리팝 버전에서)</li>
</ul>

<h3>appcompat 버전 수정</h3>

<ul>
<li>androidx.appcompat:appcompat:1.1.0 -&gt; androidx.appcompat:appcompat:1.0.2 </li>
<li>com.google.android.material:material:1.1.0</li>
<li>appcompat:1.0.2를 사용한다고 하면 안죽는다고 하지만 </li>
<li>appcompat:1.0.2 과 material:1.0.0 을 사용할때만 정상 동작 합니다.</li>
</ul>

<h3>웹뷰 커스텀 버전을 사용하는게 마음이 편할거 같습니다.</h3>

<ul>
<li><p>코틀린 버전 (자동 변환)
<script src="https://gist.github.com/pyeongho/44f8bd5cac7c26a9d6110550535cbefa.js"></script></p></li>
<li><p>자바 버전
<script src="https://gist.github.com/pyeongho/70dc3d9c1035a9082756f7982059876a.js"></script></p></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>플레이스토어 referrer 데이터 넘기기</title>
	  <link>//store_referrer</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-02-04T00:00:00+00:00</pubDate>
	  <guid>//store_referrer</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://stackoverflow.com/questions/24833801/pass-referrer-data-through-chrome-intent-to-google-play">https://stackoverflow.com/questions/24833801/pass-referrer-data-through-chrome-intent-to-google-play</a></li>
</ul>

<h3>랜딩 페이지 제작 시  referrer 데이터 전송</h3>

<ul>
<li>검색 하면 항상 나오는 형태로 아래와 같이 사용이 가능 하다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  market://details?id=com.패키지.이름&amp;referrer=xxxx 
</code></pre></div>
<ul>
<li>위와 같이사용하기 위해서는 웹에서 앱의 설치 유무를 판단 하여 앱실행 또는 마켓이동으로 분기를 처리해야한다. 분기 처리가 완벽하면 문제가 없겠지만 타임아웃을 이용해서 처리하는게 일반적이어서 문제가 발생 한다.</li>
<li>차라리 아래와 같은 일반 적인 형태에서 처리가 가능하면 어떨까 해서 찾아 보았습니다.(전달 데이터는 URL인코딩 사용 추천)</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  Intent://호스트?데이터A=AAAAAAAA&amp;데이터B=BBBBBBB#Intent;scheme=스키마;action=android.intent.action.VIEW;category=android.intent.category.BROWSABLE;package=com.패키지.이름;end 
</code></pre></div>
<h2>intent:// 스토어 이동시 리퍼러(referrer) 및 extra 데이터 전달</h2>

<ul>
<li>S.market_referrer= 를 추가하면 플레이스토어어 리퍼러에 데이터 전달 가능</li>
<li>아래 처럼 넣으면 InstallReferrerClient 에서 데이터를 확인 가능 합니다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  Intent://호스트?데이터A=AAAAAAAA&amp;데이터B=BBBBBBB#Intent;scheme=스키마;action=android.intent.action.VIEW;category=android.intent.category.BROWSABLE;package=com.패키지.이름;S.market_referrer=데이터A=AAAAAAAA&amp;데이터B=BBBBBBB;end 
</code></pre></div>
<ul>
<li>참고 
<script src="https://gist.github.com/pyeongho/a129329471269e1b9fcf09d6a19c24b5.js"></script></li>
</ul>

<h2>intent 로 데이터를 보내는 형태가 미리 정의 되어 있다.</h2>

<ul>
<li>타입</li>
<li>S.market<em>referrer 이면 스트링 타입의 market</em>referrer 이다.<br></li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  String =&gt; 'S'
  Boolean =&gt;'B'
  Byte =&gt; 'b'
  Character =&gt; 'c'
  Double =&gt; 'd'
  Float =&gt; 'f'
  Integer =&gt; 'i'
  Long =&gt; 'l'
  Short =&gt; 's'

</code></pre></div>
<ul>
<li> 웹에서 앱을 시작 할때 쿼리문 말고 아래 처러 보내서 데이터를 확인 가능 합니다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  // 웹 
  &lt;a href="intent://whatever/#Intent;scheme=myapp;package=com.what.ever.myapp;S.name=Perico%20de%20los%20Palotes;i.age=35;end"&gt;Do Whatever&lt;/a&gt;


  // 앱 
  intent.extras?.let {
      val  name = it.getString("name")
      val  age = it.getInt("age")
  }

</code></pre></div>
	  ]]></description>
	</item>


</channel>
</rss>
