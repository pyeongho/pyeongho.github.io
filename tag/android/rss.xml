<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>pyeongho.github.io</title>
   
   <link>https://pyeongho.github.io</link>
   <description>즐거운 공장</description>
   <language>en-uk</language>
   <managingEditor> PyeongHo</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>안드로이드 나인패치 그림자 만들어 주는 사이트</title>
	  <link>//nine_shadow_link</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-01-09T00:00:00+00:00</pubDate>
	  <guid>//nine_shadow_link</guid>
	  <description><![CDATA[
	     <h3>그림자를 빠르게 만들기위한 사이트 링크</h3>

<ul>
<li>라운드</li>
<li>그림자 색상</li>
<li>블러 사이즈</li>
<li>위치 오프셋 등 원하는대로 금방 만들수 있어요</li>
<li><a href="http://inloop.github.io/shadow4android/">그림자만들기</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 UI 모음</title>
	  <link>//collect_ui_link</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-01-07T00:00:00+00:00</pubDate>
	  <guid>//collect_ui_link</guid>
	  <description><![CDATA[
	     <h3>디자이너가 원하는 라이브러리를 찾아보자</h3>

<ul>
<li>앱을 만들다 보면 커스텀 UI 가 필요한 경우가 너무 많다.</li>
<li>시간이 있는것도 아니고 시간이 있어도 기존에 나온것 보다 잘 만들기 어려우니</li>
<li>디자이너가 원하는 라이브러리를 찾아서 라이브러를 커스텀 해서 사용하자</li>
</ul>

<h3>링크 모음</h3>

<ul>
<li>GIF로 기본적인 동작이 잘 나와 있으니 보면서 필요 한걸 찾아서 사용 하면 좋다.</li>
<li><a href="https://github.com/wasabeef/awesome-android-ui">안드로이드  UI 모음 1</a></li>
<li><a href="https://www.ctolib.com/topics-113375.html">안드로이드  UI 모음 2</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>데이터바인딩과 뷰모델</title>
	  <link>//viewmodel</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-12-28T00:00:00+00:00</pubDate>
	  <guid>//viewmodel</guid>
	  <description><![CDATA[
	     <h3>데이터바인딩을 이용한 뷰모델</h3>

<ul>
<li>기존 프로젝트중 화면 하나를 변경<br></li>
<li>화면은 viewpager에 이미지 추가(횡으로 한칸 한칸 이동)</li>
<li><p>LinearLayout 에 현재 이미지 위치를 표시해 주는 포인트 추가</p>

<ul>
<li>이미지 개수가 최대 몇개인지 알수 없는 API 인지라 imageview를 동적 할당 하여 넣어줌 </li>
</ul></li>
<li><p>아래가 XML 
<script src="https://gist.github.com/pyeongho/ae301847d752e8a6fbd7909a4e3632ea.js"></script></p></li>
<li><p>뷰모델 
<script src="https://gist.github.com/pyeongho/7b47e6abfb5f1c8b1ffb03fc5f0d2dcd.js"></script></p></li>
<li><p>생각보다 괜찮은 방법으로 보임</p></li>
<li><p>해야할 작업은 많아 지지만 매우 마족 스러움</p></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>kotlin init 사용시 편집기 주의사항</title>
	  <link>//kotlin_init</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-11-20T00:00:00+00:00</pubDate>
	  <guid>//kotlin_init</guid>
	  <description><![CDATA[
	     <h3>kotlin constructor , init</h3>

<ul>
<li>생성자 사용하면서 사용하는 코틀린 내용입니다.</li>
<li>참고 <a href="https://kotlinlang.org/docs/reference/classes.html">kotlinlang.org</a></li>
<li>참고 <a href="https://thdev.tech/kotlin/2017/03/09/Kotlin-Constructor-Init/">꿈많은 개발자가 되자 Kotlin constructor init 이란?</a></li>
</ul>

<h4>문서의 소중함</h4>

<ul>
<li><p>The primary constructor cannot contain any code. Initialization code can be placed in initializer blocks, which are prefixed with the init keyword.<br>
During an instance initialization, the initializer blocks are executed in the same order as they appear in the class body, interleaved with the property initializers:</p></li>
<li><p>파파고 번역</p>

<ul>
<li>기본 생성자는 코드를 포함할 수 없습니다. 초기화 코드는 init 키워드가 앞에 붙는 initializer 블록에 배치할 수 있습니다.<br>
인스턴스 초기화 중에 이니셜라이저 블록은 속성 이니셜라이저와 함께 클래스 본체에 나타나는 것과 동일한 순서로 실행됩니다.(위에서부터 실행 한다.)</li>
</ul></li>
</ul>

<h4>다시 한번 확인 하는 이유는 역시나  NullPointerException</h4>

<ul>
<li>아래 코드를 확인</li>
</ul>

<p><script src="https://gist.github.com/pyeongho/b5aa08641cdfa05a6ca56f18a4d30d3e.js"></script></p>

<ul>
<li>편집기에서 에러가 발생 하지 않는게 문제</li>
<li>열심히 문서 보고 공부 했으면 문제가 없었겠지만  nullPoint -&gt; sb.append(&quot; hahaha&quot;) 에서 에러가 발생 한다.</li>
<li>순서대로 초기화 하기 때무에 val sb = StringBuilder(name) 하기 전에 사용, 널포인트 </li>
<li>sb.append(&quot; hahaha&quot;) 를 첫번째 init 블럭에 사용하면 에러 표시를 하지만 함수를 이용하면 나타 나지 않는다.</li>
<li>문서 확인과 편집기 완벽 하지 않음으로 발생하는 내용으로 잘 알고 있어야 합니다.</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>App Version Name 다양한 방법</title>
	  <link>//appVersion</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-11-12T00:00:00+00:00</pubDate>
	  <guid>//appVersion</guid>
	  <description><![CDATA[
	     <h3>몇명 사용하지도 않는데 왜 앱 버전을 못 가지고 오는 걸까?</h3>

<ul>
<li>그냥 버전이름과 코드를 가지고 오는 방법으로 아래와 같이 사용하고 있습니다.</li>
</ul>
<div class="highlight"><pre><code class="language-java" data-lang="java">        <span class="n">PackageManager</span> <span class="n">manager</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">();</span>
        <span class="k">try</span> <span class="o">{</span>
           <span class="n">PackageInfo</span> <span class="n">info</span> <span class="o">=</span> <span class="n">manager</span><span class="o">.</span><span class="na">getPackageInfo</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getPackageName</span><span class="o">(),</span> <span class="mi">0</span><span class="o">);</span>
           <span class="n">String</span> <span class="n">packageName</span> <span class="o">=</span> <span class="n">info</span><span class="o">.</span><span class="na">packageName</span><span class="o">;</span>
           <span class="kt">int</span> <span class="n">versionCode</span> <span class="o">=</span> <span class="n">info</span><span class="o">.</span><span class="na">versionCode</span><span class="o">;</span>
           <span class="n">String</span> <span class="n">versionName</span> <span class="o">=</span> <span class="n">info</span><span class="o">.</span><span class="na">versionName</span><span class="o">;</span>
           <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NameNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
           <span class="c1">// TODO Auto-generated catch block</span>
           <span class="o">}</span>
</code></pre></div>
<ul>
<li>특정 기기에서 특정 조건 일때만 죽는 디버깅이 너무 어렵다.</li>
<li>우선 문제 해결 먼저 진행</li>
<li>처음에는 하드코딩하 넣었지만 버전 올라갈때마다 같이 변경해줘야 하는 너무나 큰 불편함이 존재함</li>
<li>그래서 빌드 컨피그를 이용하여 아래와 같이 사용하면 상수 처럼 사용 가능 </li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">      /*version name*/
      BuildConfig.VERSION_NAME

      /*version code*/
      BuildConfig.VERSION_CODE

</code></pre></div>
<h3>BuildConfig 에 나만의 상수 추가</h3>

<ul>
<li>위 방법을 찾기 전에는 아래와 같은 방법으로 진행했지만 이제는 다른 상수 추가 할때 사용 중<br></li>
<li>프로젝트 build.gradle 에서 appVersion 을 추가</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">ext {
    appVersion = "1.0.5"
}

</code></pre></div>
<ul>
<li>versionName &quot;$rootProject.appVersion&quot;</li>
<li>build.gradle buildTypes 에 추가 한 내용</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">    def version=  '\"' + "$rootProject.appVersion" +'\"'
    debug{
        buildConfigField "String", "APP_VERSION", version
    }
    release {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        buildConfigField "String", "APP_VERSION", version
    }

</code></pre></div>
<ul>
<li>BuildConfig.APP_VERSION  이런 상수를 사용 가능하다.</li>
<li>필요한 상수등을 정의해서 편하게 사용하면 된다.</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>No toolchains found in the NDK</title>
	  <link>//no-ndk</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-11-09T00:00:00+00:00</pubDate>
	  <guid>//no-ndk</guid>
	  <description><![CDATA[
	     <h3>NDK 를 사용하지 않는데</h3>

<ul>
<li>안드로이드 스튜디오 3.2로 업데이트 이후 구 버전 프로젝트 실행 시 아래와 같은 에러가 너무 많이 난다. </li>
<li>&quot;No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android&quot;</li>
</ul>

<h3>나만의 해결</h3>

<ul>
<li>그래들 버전 업</li>
<li>다른 분들은 안될수도 있지만 저는 3.2.1 로 변경하니 NDK 가 더이상 안나옵니다.</li>
<li>&quot;classpath &#39;com.android.tools.build:gradle:3.2.1&#39;&quot;</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>앱 아이콘 동적 변경</title>
	  <link>//change-icon</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-11-06T00:00:00+00:00</pubDate>
	  <guid>//change-icon</guid>
	  <description><![CDATA[
	     <h3>아이콘을 동적 변경해야 하는일도 있는 세상</h3>

<ul>
<li>세상은 어떤일들이 일어 날지 모른다. 앱 아이콘을 조건에 따라 변경하고 싶어 하는 일도 있다.</li>
<li>정말 가능하다 ㅎㅎ</li>
</ul>

<h3>동적 아이콘 변경</h3>

<ul>
<li><a href="https://github.com/myinnos/AppIconNameChanger">AppIconNameChanger</a> </li>
<li>동작은 github 에 라이브러리가 잘 처리해 줍니다.</li>
</ul>

<h3>기본적인 알리아스 사용</h3>

<ul>
<li>애플리케이션 배포후에 런처 액티비티를 변경해야하는 일이 발생 할때 사용하면 좋다.</li>
<li>앱 업데이트로 바탕화면의 아이콘이 없어지는건 앱이 동작 안하는것과 같다.</li>
<li>아래 코드와 같이 기존 액티비티의 이름(기존 이름을 알리아스로 설정)이 실행되면 신규 액티비타를 실행 시켜 주는 방법 </li>
</ul>

<p><script src="https://gist.github.com/pyeongho/57ea15753697fd8c3e35a87d18e8fa64.js"></script></p>

<h3>동작 확인</h3>

<ul>
<li>메니페스트의 activity-alias 를 이용하는 방식이다.</li>
<li>알리아스의 번역처럼 별명을 지어 주는 내용입니다.</li>
<li>알리아스를 만들어서 각각의 속성을 주고 targetActivity 를 이용해서 실행 시킬 액티비티를 설정</li>
<li>동작해야 하는 액티비티는 하나가 되지만 각각의 별칭을 이용해서 접근이 가능하다.</li>
<li>기본동작 해양하는 알리아스를  android:enabled=&quot;true&quot; 활성화 하면 된다.</li>
<li>코드에서 해당 알리아스를 기본으로 동작 시켜 주면 된다.<br></li>
<li>아래 코드 내용처럼 패키지매니저를 이용해서 패키지 구성 요소를 변경 할수 있다.</li>
</ul>

<p><script src="https://gist.github.com/pyeongho/ce5b9f9862ab86312bd6203e2dd8648e.js"></script></p>

	  ]]></description>
	</item>

	<item>
	  <title>Jetpack 사용을 위한 기초 공부 AAC(ViewModel)</title>
	  <link>//aac_c2</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-10-29T00:00:00+00:00</pubDate>
	  <guid>//aac_c2</guid>
	  <description><![CDATA[
	     <h3>샘플은 구글</h3>

<ul>
<li><a href="https://github.com/googlesamples/android-sunflower">해바라기</a><br></li>
<li><a href="https://github.com/googlesamples/android-architecture-components">구글 샘플</a></li>
<li><a href="https://developer.android.com/topic/libraries/architecture/viewmodel">ViewModel</a></li>
</ul>

<h3>패턴의 변화</h3>

<ul>
<li>ViewModel클래스는 UI 관련 데이터를 라이프 사이클을 고려한 방식으로 저장하고 관리하도록 설계되었습니다. 이 ViewModel클래스를 사용하면 화면 회전과 같은 구성 변경시에도 데이터를 유지할 수 있습니다.</li>
</ul>

<h3>뷰모델</h3>

<ul>
<li>뷰모델은 옵저버패턴이라고 이해중</li>
<li>데이터가 변화 가능한곳에 콜백 같은 옵저버를 추가한다.</li>
<li>UI 쪽에서 해당 데이터의 콜백을 이용하여 업데이트 한다.</li>
<li>데이터를 콜백 형태로 묶어 놓기 때문에 위에서 말하는 UI 와 완전 분리가 가능하다.</li>
<li>예를 들어 특정 데이터가 변경 되면 콜백 발생하도록 하고 콜백에서 UI 업데이트를 처리한다.</li>
<li>이런 개념으로 이해 함</li>
<li>BasicRxJavaSampleKotlin 기본으로 공부 중</li>
<li>콜백을 넣어 주는 부분이 직접접이지 않아 이해 하고 있어야 이해가 된다.</li>
<li>아래와 같은 코드가 있을 때 Rx 를 이용해서  viewModel.userName()  변화를 감지하여 UI 업데이트 </li>
<li>클릭 이벤트에서 updateUserName() 를 호출 하면 DB 완료후 결과를 다시 읽어 UI 를 업데이트 함</li>
<li>하지만 뷰모엘을 이용하면 콜백으로 변경 내용을 확인 하므로 UI 업데이트에 대한 의존성을 없앨수 있다.</li>
</ul>
<div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">      override fun onStart() {
            super.onStart()
            // Subscribe to the emissions of the user name from the view model.
            // Update the user name text view, at every onNext emission.
            // In case of error, log the exception.
            disposable.add(viewModel.userName()
                    .subscribeOn(Schedulers.io())
                    .observeOn(AndroidSchedulers.mainThread())
                    .subscribe({ this.user_name.text = it },
                            { error -&gt; Log.e(TAG, "Unable to get username", error) }))
        }

        override fun onStop() {
            super.onStop()

            // clear all the subscription
            disposable.clear()
        }

        private fun updateUserName() {
            val userName = user_name_input.text.toString()
            // Disable the update button until the user name update has been done
            update_user_button.isEnabled = false
            // Subscribe to updating the user name.
            // Enable back the button once the user name has been updated
            disposable.add(viewModel.updateUserName(userName)
                    .subscribeOn(Schedulers.io())
                    .observeOn(AndroidSchedulers.mainThread())
                    .subscribe({ update_user_button.isEnabled = true },
                            { error -&gt; Log.e(TAG, "Unable to update username", error) }))
        }

</code></pre></div>
	  ]]></description>
	</item>

	<item>
	  <title>Jetpack 사용을 위한 기초 공부 AAC(Room)</title>
	  <link>//aac_c1</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-10-29T00:00:00+00:00</pubDate>
	  <guid>//aac_c1</guid>
	  <description><![CDATA[
	     <h3>샘플은 구글</h3>

<ul>
<li><a href="https://github.com/googlesamples/android-sunflower">해바라기</a><br></li>
<li><a href="https://github.com/googlesamples/android-architecture-components">구글 샘플</a></li>
<li><a href="https://developer.android.com/training/data-storage/room/defining-data">Room 엔터티</a></li>
<li><a href="https://www.bsidesoft.com/?p=6003">비사이드소프트</a><br></li>
</ul>

<h3>샘플 내용 요약</h3>

<ul>
<li>sunflower, 구글 AAC 샘플을 적용하기전 기초지식 부터</li>
<li>짧은 샘플이지만 기본적인 내용부터 알아야 가능 </li>
</ul>

<h3>라이브데이터</h3>

<ul>
<li>기존 데이터를 DB 에 넣어 오프라인에서도 기존데이터는 볼수 있도록 하자</li>
<li>항상 최신데이터가 필요 할 수도 있지만 예전 데이터라도 보고 싶을때가 있다. </li>
</ul>

<h3>기초 지식 1: ROOM</h3>

<ul>
<li>라이브 데이터를 사용하기 위해서 기초인 room<br></li>
<li>일반적인 DB 에서는 테이블을 만들어 사용하지만 room 은 orm 형태로 클래스를 만들어 사용한다.</li>
<li>아래와 같이 테이블을 만들어 사용 해야 한다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">    create table Items(
        id int NOT NULL,
        name varchar(255) NOT NULL,
        description varchar(255),
        price int,
        PRIMARY KEY (id)
    )
</code></pre></div>
<ul>
<li>Room 의 Entity 형태로 변경하면 아래와 같이 클래스 선언후 필요한 어노테이션을 추가하면 된다.</li>
<li>참고내용으로 실제 적용 할때는 찾아서 하는게 좋습니다.

<ul>
<li>어노테이션들

<ul>
<li>@Entity(primaryKeys = {“firstName”, “lastName”})  : 복합키 </li>
<li>@ColumnInfo(name = “first_name”)String firstName : 객체 필드명과 실제 테이블 필드명이 다를 때의 처리</li>
<li>@Ignore Bitmap picture : 무시할 객체의 필드</li>
<li>@Entity(indices = {@Index(“name”), @Index(value = {“last_name”, “address”})}) : 인덱스설정 </li>
<li>@Entity(foreignKeys = @ForeignKey(entity = User.class, parentColumns = “id”, childColumns = “user_id”)) : 외래키 설정 </li>
<li>@Embedded OtherEntity data : 중첩엔티티로 표현하기</li>
</ul></li>
</ul></li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">    @Entity(tableName = "Items")
    data class ItemEntity(
        @PrimaryKey
        val id:Int,
        val name:String ,
        val description:String, 
        val price:Int
    )
</code></pre></div>
<h3>DAO : 쿼리 인터페이스</h3>

<ul>
<li>Room 전체 적인 DB 개념이니 데이터의 추가 삭제를 담당 하는 인터페이스</li>
<li>SQLite3 를 사용하기에 쿼리문을 직접 사용하거나 제공 되는 어노테이션을 사용하면 된다.</li>
<li>아래는 오너테이션 사용 관련 자바 입니다. 공부하는 코드가 자바라 </li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  // 예제 1
  @Dao
  public interface MyDao {
      @Query("SELECT * FROM user")
      public User[] loadAllUsers();
  }

  // 예제 2
  @Dao
  public interface MyDao {
      @Delete
      public void deleteUsers(User... users);
  }

  // 예제 2
  @Dao
  public interface MyDao {
      @Update
      public void updateUsers(User... users);
  }

  // 예제 3 
  @Dao
  public interface MyDao {
      @Insert(onConflict = OnConflictStrategy.REPLACE)
      public void insertUsers(User... users);

      @Insert
      public void insertBothUsers(User user1, User user2);

      @Insert
      public void insertUsersAndFriends(User user, List&lt;User&gt; friends);
  }
</code></pre></div>
<h3>엔터티, DAO 를 이용한 데이터베이스 생성</h3>

<ul>
<li>빌더 패턴이 적용된 데이터 베이스</li>
<li>여기 까지는 기본적인 내용으로 실제 적용은 다른 포스트에서...</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">    @Database(entities = arrayOf(User::class), version = 1)
    abstract class UsersDatabase : RoomDatabase() {

        abstract fun userDao(): UserDao

        companion object {

            @Volatile private var INSTANCE: UsersDatabase? = null

            fun getInstance(context: Context): UsersDatabase =
                    INSTANCE ?: synchronized(this) {
                        INSTANCE ?: buildDatabase(context).also { INSTANCE = it }
                    }

            private fun buildDatabase(context: Context) =
                    Room.databaseBuilder(context.applicationContext,
                            UsersDatabase::class.java, "Sample.db")
                            .build()
        }
    }


</code></pre></div>
	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 Jetpack 중 네비게이션 에디터 사용</title>
	  <link>//navigation-editor</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-07-03T00:00:00+00:00</pubDate>
	  <guid>//navigation-editor</guid>
	  <description><![CDATA[
	     <h3>안드로이드 Jetpack</h3>

<ul>
<li>가중 눈에 가는 네비게이션 에디터를 사용해 보려고 했지만 사용법은 금방 나오지만 어떻게 해야 에디터가 나오는지 안보인다.</li>
<li>File -&gt; Settings -&gt; Experimental -&gt; Enable Navigation Editor 을 활성화 하자<br></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
