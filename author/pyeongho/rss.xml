<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>pyeongho.github.io</title>
   
   <link>https://pyeongho.github.io</link>
   <description>즐거운 공장</description>
   <language>en-uk</language>
   <managingEditor> PyeongHo</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>안드로이드 5.0 ~ 5.1 Error inflating class android.webkit.WebView (21~22)</title>
	  <link>//androidx_webview</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-02-07T00:00:00+00:00</pubDate>
	  <guid>//androidx_webview</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://stackoverflow.com/questions/57783707/webview-inflateexception">https://stackoverflow.com/questions/57783707/webview-inflateexception</a></li>
</ul>

<h3>androidx 에서 Error inflating class android.webkit.WebView 에러 발생</h3>

<ul>
<li>롤리팝 버전에서 해당 에러로 앱 크래시</li>
</ul>

<h3>콜라보레이션</h3>

<ul>
<li>androidx.appcompat:appcompat:1.1.0</li>
<li>com.google.android.material:material:1.1.0</li>
<li>위 2개의 라이브러리의 콜라브레이션으로 에러 발생  1.1.0 이 2개모두 추가되어 있으면 100% 크래시(롤리팝 버전에서)</li>
</ul>

<h3>appcompat 버전 수정</h3>

<ul>
<li>androidx.appcompat:appcompat:1.1.0 -&gt; androidx.appcompat:appcompat:1.0.2 </li>
<li>com.google.android.material:material:1.1.0</li>
<li>appcompat:1.0.2를 사용한다고 하면 안죽는다고 하지만 </li>
<li>appcompat:1.0.2 과 material:1.0.0 을 사용할때만 정상 동작 합니다.</li>
</ul>

<h3>웹뷰 커스텀 버전을 사용하는게 마음이 편할거 같습니다.</h3>

<ul>
<li><p>코틀린 버전 (자동 변환)
<script src="https://gist.github.com/pyeongho/44f8bd5cac7c26a9d6110550535cbefa.js"></script></p></li>
<li><p>자바 버전
<script src="https://gist.github.com/pyeongho/70dc3d9c1035a9082756f7982059876a.js"></script></p></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>플레이스토어 referrer 데이터 넘기기</title>
	  <link>//store_referrer</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-02-04T00:00:00+00:00</pubDate>
	  <guid>//store_referrer</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://stackoverflow.com/questions/24833801/pass-referrer-data-through-chrome-intent-to-google-play">https://stackoverflow.com/questions/24833801/pass-referrer-data-through-chrome-intent-to-google-play</a></li>
</ul>

<h3>랜딩 페이지 제작 시  referrer 데이터 전송</h3>

<ul>
<li>검색 하면 항상 나오는 형태로 아래와 같이 사용이 가능 하다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  market://details?id=com.패키지.이름&amp;referrer=xxxx 
</code></pre></div>
<ul>
<li>위와 같이사용하기 위해서는 웹에서 앱의 설치 유무를 판단 하여 앱실행 또는 마켓이동으로 분기를 처리해야한다. 분기 처리가 완벽하면 문제가 없겠지만 타임아웃을 이용해서 처리하는게 일반적이어서 문제가 발생 한다.</li>
<li>차라리 아래와 같은 일반 적인 형태에서 처리가 가능하면 어떨까 해서 찾아 보았습니다.(전달 데이터는 URL인코딩 사용 추천)</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  Intent://호스트?데이터A=AAAAAAAA&amp;데이터B=BBBBBBB#Intent;scheme=스키마;action=android.intent.action.VIEW;category=android.intent.category.BROWSABLE;package=com.패키지.이름;end 
</code></pre></div>
<h2>intent:// 스토어 이동시 리퍼러(referrer) 및 extra 데이터 전달</h2>

<ul>
<li>S.market_referrer= 를 추가하면 플레이스토어어 리퍼러에 데이터 전달 가능</li>
<li>아래 처럼 넣으면 InstallReferrerClient 에서 데이터를 확인 가능 합니다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  Intent://호스트?데이터A=AAAAAAAA&amp;데이터B=BBBBBBB#Intent;scheme=스키마;action=android.intent.action.VIEW;category=android.intent.category.BROWSABLE;package=com.패키지.이름;S.market_referrer=데이터A=AAAAAAAA&amp;데이터B=BBBBBBB;end 
</code></pre></div>
<ul>
<li>참고 
<script src="https://gist.github.com/pyeongho/a129329471269e1b9fcf09d6a19c24b5.js"></script></li>
</ul>

<h2>intent 로 데이터를 보내는 형태가 미리 정의 되어 있다.</h2>

<ul>
<li>타입</li>
<li>S.market<em>referrer 이면 스트링 타입의 market</em>referrer 이다.<br></li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  String =&gt; 'S'
  Boolean =&gt;'B'
  Byte =&gt; 'b'
  Character =&gt; 'c'
  Double =&gt; 'd'
  Float =&gt; 'f'
  Integer =&gt; 'i'
  Long =&gt; 'l'
  Short =&gt; 's'

</code></pre></div>
<ul>
<li> 웹에서 앱을 시작 할때 쿼리문 말고 아래 처러 보내서 데이터를 확인 가능 합니다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">  // 웹 
  &lt;a href="intent://whatever/#Intent;scheme=myapp;package=com.what.ever.myapp;S.name=Perico%20de%20los%20Palotes;i.age=35;end"&gt;Do Whatever&lt;/a&gt;


  // 앱 
  intent.extras?.let {
      val  name = it.getString("name")
      val  age = it.getInt("age")
  }

</code></pre></div>
	  ]]></description>
	</item>

	<item>
	  <title>카카오 SDK 사용하기</title>
	  <link>//plusfriend</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-01-21T00:00:00+00:00</pubDate>
	  <guid>//plusfriend</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://developers.kakao.com/docs/android/getting-started">https://developers.kakao.com/docs/android/getting-started</a></li>
</ul>

<h3>SDK 연동 및 사용</h3>

<ul>
<li>기본 적인 내용은 개발자 사이트에서 사용 가능하지만 이상하게 없는 정보들이 있습니다.</li>
</ul>

<h3>KAKAO<em>SDK</em>VERSION 정보 찾기</h3>

<ul>
<li><a href="https://developers.kakao.com/docs/sdk">https://developers.kakao.com/docs/sdk</a> </li>
<li>위 링크에서 최신 정보를 확인 할 수 있습니다.</li>
<li>문제점은 변경 내역을 자세히 봐야 합니다. androidx 사용을 구분으로 사용 가능한 버전을 따로 관리 안함<br></li>
<li>androidx 버전 : 1.22.0 ~ 최신 버전</li>
<li>구버전        : ~  1.21.1 까지<br></li>
<li>androidx 를 사용하지 않는다면 1.21.1을 사용하면 됩니다.</li>
</ul>

<h3>카카오 채널</h3>

<ul>
<li>dependencies  추가 할때 내용을 보면 카카오 채널 관련 내용이 없어서 구글 검색으로 내용을 확인 했습니다.</li>
<li>카카오 채널은 name 에 plusfriend를 추가후 확인해야 합니다.</li>
</ul>

<h2>androidx : 1.22.0  이후 버전 사용</h2>

<h2>not androidx : 1.21.1  까지 사용 가능</h2>

<h2>카카오 채널 :  plusfriend를</h2>

	  ]]></description>
	</item>

	<item>
	  <title>UndeliverableException 발생</title>
	  <link>//undeliverableException</link>
	  <author>PyeongHo</author>
	  <pubDate>2020-01-15T00:00:00+00:00</pubDate>
	  <guid>//undeliverableException</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://thdev.tech/android/2019/03/04/RxJava2-Error-handling/">https://thdev.tech/android/2019/03/04/RxJava2-Error-handling/</a></li>
</ul>

<h3>UndeliverableException</h3>

<ul>
<li>최근 들어 UndeliverableException이 자주 발생 하여 블로그를 참고 하여 코드를 그냥 쓰려고 하였지만 에러가 있어 아주 조금 수정 하였습니다.</li>
<li>자세한 내용은 참고 링크에 있습니다.</li>
<li>rxjava disposable 이후 이벤트가 들어 올때 발생 합니다.</li>
</ul>

<p><script src="https://gist.github.com/pyeongho/8a50d38c8957a070098b8ebb71ae8ccc.js"></script></p>

	  ]]></description>
	</item>

	<item>
	  <title>구글 스프레드 시트 자동 언어(안드로이드)</title>
	  <link>//gdata</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-12-24T00:00:00+00:00</pubDate>
	  <guid>//gdata</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://dunji.tistory.com/2">https://dunji.tistory.com/2</a></li>
</ul>

<h3>구글 스프레드 시트 자동 번역을 이용하려고 python 을 사용하려고 할때 발생하는 에러</h3>

<ul>
<li>=GOOGLETRANSLATE(B592,&quot;ko&quot;,&quot;en&quot;) 요런 구글 자동 번역</li>
</ul>

<h3>문제는 실행하면   Moved Permanently  요런 에러가 발생하면서 안된다.</h3>

<ul>
<li>항상 기본 설치 이기에 C:\Python27\Lib\site-packages\gdata  이곳에 설치 된다.</li>
<li>수정해야 할 부분은 C:\Python27\Lib\site-packages\gdata\docs\service.py 파일</li>
<li>server_response.status 로 검색 하면 302 만 처리되어 있습니다. 이를 아래와 같이 수정 하면 Moved Permanently 수정 할 수 있습니다.<br></li>
</ul>
<div class="highlight"><pre><code class="language-python" data-lang="python">    <span class="k">while</span> <span class="n">server_response</span><span class="o">.</span><span class="n">status</span> <span class="o">==</span> <span class="mi">302</span> <span class="ow">or</span> <span class="n">server_response</span><span class="o">.</span><span class="n">status</span> <span class="o">==</span> <span class="mi">301</span> <span class="ow">and</span> <span class="n">timeout</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</code></pre></div>
<h3>string.xml 을 csv 로 만들고 그걸 구글 자동 번역으로 변경하고 다시 xml 로 변경하는 프로그램</h3>

<ul>
<li>파이썬 프로그램 코드 </li>
</ul>

<p><script src="https://gist.github.com/pyeongho/fd6975c221e1ac00f0fa8728bf649daa.js"></script></p>

	  ]]></description>
	</item>

	<item>
	  <title>androidx navigation , Safe Arg</title>
	  <link>//navigation</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-12-04T00:00:00+00:00</pubDate>
	  <guid>//navigation</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://developer.android.com/guide/navigation/navigation-pass-data">https://developer.android.com/guide/navigation/navigation-pass-data</a></li>
<li><a href="https://developer.android.com/jetpack/androidx/releases/navigation">https://developer.android.com/jetpack/androidx/releases/navigation</a></li>
<li><a href="https://www.charlezz.com/?p=354">https://www.charlezz.com/?p=354</a></li>
<li><a href="https://blog.naver.com/yoonhok_524/221530058636">https://blog.naver.com/yoonhok_524/221530058636</a></li>
</ul>

<h3>종속성 추가</h3>

<ul>
<li>프로젝트 레벨 </li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">buildscript {
    repositories {
        google()
    }
    dependencies {
        def nav_version = "2.1.0"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    }
}

</code></pre></div>
<ul>
<li>앱 레벨</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">apply plugin: "androidx.navigation.safeargs" or  apply plugin: "androidx.navigation.safeargs.kotlin"

dependencies {
  def nav_version = "2.1.0"

  // Java language implementation
  implementation "androidx.navigation:navigation-fragment:$nav_version"
  implementation "androidx.navigation:navigation-ui:$nav_version"

  // Kotlin
  implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
  implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

}


</code></pre></div>
<h3>Safe Arg</h3>

<ul>
<li>번들을 사용해도 되지만 안전하게 변수로 사용하는 방법</li>
<li><p>방법</p>

<ul>
<li>액션을 만든다.</li>
<li>액션에 arg를 추가 한다.</li>
<li>도착지에 arg 를 추가한다.</li>
</ul></li>
<li><p>네비게이션 샘플</p>

<p><script src="https://gist.github.com/pyeongho/616fc4d88b8bd1f3bc3bb5ce2987b9b4.js"></script>  </p></li>
<li><p>시작 지 액션 실행</p>

<ul>
<li>자신이 정의 프래그먼트 이름(Register1Fragment)으로  xxxxxDirections 클래스(Register1FragmentDirections)가 자동 생성 되며 해당 클래스에 액션이 정의 되어 있다.<br>
<code>kotlin
val action = Register1FragmentDirections.actionNavRegister1ToNavRegister2(it.arg)
Navigation.findNavController(v).navigate(action)
</code></li>
</ul></li>
<li><p>종착지 확인</p>

<ul>
<li>자신이 정의한 이름에(Register2Fragment)  xxxArgs 가 추가된 클래스가 자동 생성되되 미리 정의된 변수를 확인 할 수 있습니다.<br></li>
</ul>
<div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">val args :Register2FragmentArgs by navArgs()
override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        log.d(args.name)
}

</code></pre></div></li>
</ul>

<h3>에러 발생 주의점</h3>

<ul>
<li>cannot inline bytecode built with jvm target 1.8 into bytecode that is being built with jvm target 1.6. please specify proper &#39;-jvm-target&#39; option</li>
<li>File-settings안의 kotlin compiler 안의 target JVM version을 바꿔준다 

<ul>
<li>File-Invalidate Caches / Restart 후 Build - Clean Project </li>
</ul></li>
<li>안되면 

<ul>
<li>build.gradle(module:app)안의  android{} 안에 kotlinOptions{jvmTarget = &quot;1.8&quot;} 을 넣는다<br></li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>intellij 계열 인증서 오류 수정</title>
	  <link>//ssl</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-11-27T00:00:00+00:00</pubDate>
	  <guid>//ssl</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://m.blog.naver.com/PostView.nhn?blogId=youzang7&amp;logNo=221192794441&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F">intellij Server Certificates 문제</a></li>
</ul>

<h3>안드로이드 스튜디오 , intellij 등을 사용시 뜬금 없이 나오는 인증서 오류 문제</h3>

<ul>
<li>아래와 같은 에러들로 빌드 에러가 발샐할 때 (일반적이지는 않아요)

<ul>
<li>PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException</li>
<li>Server&#39;s Certificate is not trusted pop-up</li>
</ul></li>
</ul>

<h3>참고 사이트</h3>

<ul>
<li>3개 정도의 방법입니다. 저는 사내 인증서 허용 방법으로 해결 했습니다. 마지막 방법은 실패해서 정리는 안했습니다.</li>
</ul>

<h2>설정 변경</h2>

<ul>
<li> SSL 통신 관련 옵션을 해제

<ul>
<li>File &gt; Settings &gt; Tools &gt; Server Certificates &gt; Accept non-trusted certificates automatically 체크</li>
<li>저는 실패 했습니다.</li>
</ul></li>
</ul>

<h2>사내 인증서 허용</h2>

<ul>
<li>회사내 인증서 및 self 인증서가 존재한다면 다음과 같이 진행한다.</li>
<li>저는 이걸로 성공 했습니다.</li>
<li>경로 : C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.1\jbr\lib\security</li>
<li>해당 경로의 파일들은 따로 백업</li>
<li>keytool ‐keystore cacerts ‐importcert ‐alias HQSSL ‐file HQSSL.cer 실행 (password : changeit , HQSSL.cer 사내 인증서 파일로 대체)</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>단색 bmp 생성</title>
	  <link>//monobmp</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-11-27T00:00:00+00:00</pubDate>
	  <guid>//monobmp</guid>
	  <description><![CDATA[
	     <h3>단색 BMP 생성</h3>

<ul>
<li>BMP 헤더는 한땀 한땀 만들어서 넣었습니다. ㅠㅠ</li>
<li>128 * 64 사이즈의 단색 BMP 파일 생성 입니다.</li>
<li>단색의 경우 1비트가 1픽셀을 나타 냅니다.</li>
<li>1바이트는 8픽셀 입니다.</li>
<li>128 * 64 = 8192 픽셀</li>
<li>8192 =&gt;  1024바이트 </li>
<li>헤더는 무식하게 하드코딩으로 넣었습니다.</li>
<li><p>색상 가지고 와서 약간의 색상이 포함 되어 있으면 1 없으면 0
``` kotlin
    val width = bitmap.width
    val height = bitmap.height
    var R: Int
    var G: Int
    var B: Int
    var pixel: Int
    var i = 62
    var bit = 7
    for (x in height-1  downTo  0) {  // 위아래 반전을 제거 하기 위해서 63부터 역순, 
        for (y in 0 until width) {
            pixel = bitmap.getPixel(y, x)   </p>
<div class="highlight"><pre><code class="language-" data-lang="">        R = Color.red(pixel)
        G = Color.green(pixel)
        B = Color.blue(pixel)
        val gray = R+G+B/3
        if(gray  &gt; 128){
            arrayOfByte[i] = arrayOfByte[i]  or  (1 shl bit).toByte()  
        }

        if(bit ==0){  // 알아보기 쉽게, 엔디안 처리 
            i++
            bit = 8
        }
        bit--
    }
}
</code></pre></div></li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">



### e BMP 헤더
  - 128 * 64 입니다.
  - [헤더참고](https://heinek.tistory.com/13)
  ``` kotlin
        val arrayOfByte = ByteArray(1086)
        arrayOfByte[0] = 66
        arrayOfByte[1] = 77
        arrayOfByte[2] = 62   // 사이즈  0x3E
        arrayOfByte[3] = 4    // 사이즈  0x04
        arrayOfByte[4] = 0    // 사이즈  0x00   
        arrayOfByte[5] = 0    // 사이즈  0x00   1086
        arrayOfByte[6] = 0
        arrayOfByte[7] = 0
        arrayOfByte[8] = 0
        arrayOfByte[9] = 0
        arrayOfByte[10] = 62  // 이미지 데이터가 있는 곳의 포인터 실제 데이터는 62번째 주소 부터 
        arrayOfByte[11] = 0
        arrayOfByte[12] = 0
        arrayOfByte[13] = 0
        arrayOfByte[14] = 40
        arrayOfByte[15] = 0
        arrayOfByte[16] = 0
        arrayOfByte[17] = 0
        arrayOfByte[18] = Byte.MIN_VALUE  // -128  폭
        arrayOfByte[19] = 0
        arrayOfByte[20] = 0
        arrayOfByte[21] = 0
        arrayOfByte[22] = 64  // 높이
        arrayOfByte[23] = 0   // 높이
        arrayOfByte[24] = 0   // 높이
        arrayOfByte[25] = 0   // 높이  0 0 0 64
        arrayOfByte[26] = 1  
        arrayOfByte[27] = 0
        arrayOfByte[28] = 1
        arrayOfByte[29] = 0
        arrayOfByte[30] = 0
        arrayOfByte[31] = 0
        arrayOfByte[32] = 0
        arrayOfByte[33] = 0
        arrayOfByte[34] = 0
        arrayOfByte[35] = 4
        arrayOfByte[36] = 0
        arrayOfByte[37] = 0
        arrayOfByte[38] = 0
        arrayOfByte[39] = 0
        arrayOfByte[40] = 0
        arrayOfByte[41] = 0
        arrayOfByte[42] = 0
        arrayOfByte[43] = 0
        arrayOfByte[44] = 0
        arrayOfByte[45] = 0
        arrayOfByte[46] = 0
        arrayOfByte[47] = 0
        arrayOfByte[48] = 0
        arrayOfByte[49] = 0
        arrayOfByte[50] = 0
        arrayOfByte[51] = 0
        arrayOfByte[52] = 0
        arrayOfByte[53] = 0
        arrayOfByte[54] = 0
        arrayOfByte[55] = 0
        arrayOfByte[56] = 0
        arrayOfByte[57] = 0
        arrayOfByte[58] = -1
        arrayOfByte[59] = -1
        arrayOfByte[60] = -1
        arrayOfByte[61] = 0 

</code></pre></div>
	  ]]></description>
	</item>

	<item>
	  <title>android headup notification</title>
	  <link>//headup</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-10-27T00:00:00+00:00</pubDate>
	  <guid>//headup</guid>
	  <description><![CDATA[
	     <h3>참고</h3>

<ul>
<li><a href="https://codechacha.com/ko/notifications-in-android/">안드로이드의 다양한 Notification 종류와 구현 방법</a></li>
<li><a href="https://github.com/codechacha/notifications-with-styles">샘플</a></li>
</ul>

<h3>푸시 채널 이야기</h3>

<ul>
<li>P 버전 이상에서는 채널을 추가해야 노티피케이션을 사용 할 수 있습니다.</li>
</ul>

<h3>headup  notification 매우 강조 되는 표시</h3>

<ul>
<li>문자등이 올때 상태바에서 뚝 떨어지는 노티피케이션 입니다.</li>
</ul>

<h3>Head Up Notifiation</h3>

<ul>
<li>Head up Notification은 전면에 노티가 뜨는 것을 말합니다. 사용자가 Statusbar를 내려서 확인하지 않아도 바로 화면에 뜨기 때문에 쉽게 눈에 띕니다. 전화와 같은 중요한 작업을 알릴 때 이런 노티를 적용하면 좋을 것 같습니다. 중요하지 않은데 사용된다면 사용자가 이 앱이 거슬리다고 생각할 수 있습니다.<br>
아래 화면은 Head up notification입니다. 예제는 기본 노티에 적용하였지만 모든 스타일의 노티에 적용할 수 있습니다. </li>
</ul>

<p><script src="https://gist.github.com/pyeongho/341435dcb47b87b81026f3afd00434ea.js"></script></p>

<ul>
<li>1. 채널을 만들 때 중요도를 IMPORTANCE_HIGH로 설정해야 합니다.</li>
<li>2. PendingIntent를 만듭니다. Builder에 fullScreenPendingIntent를 등록하기 때문에 변수 이름을 fullScreenPendingIntent라고 했습니다.</li>
<li>3. Builder의 priority를 PRIORITY_HIGH로 설정해야 합니다.</li>
<li>4. fullScreenPendingIntent를 등록합니다.</li>
<li>그리고 가장 중요한 것은 앱의 AndroidManifest.xml에 다음 퍼미션을 꼭 추가해야 합니다. Install 퍼미션이기 때문에 설치만 하면 바로 권한을 받습니다.

<ul>
<li> <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT"/></li>
<li>Head up notification은 채널의 중요도를 IMPORTANCE<em>HIGH, 노티의 중요도를 PRIORITY</em>HIGH로 설정해야 합니다. 그리고 fullScreenIntent를 추가해야 합니다. 마지막으로 가장 중요한 것은 Q부터 USE<em>FULL</em>SCREEN_INTENT 권한이 없으면 Head up 노티를 띄울 수 없기 때문에 꼭 추가해줘야 합니다.</li>
</ul></li>
</ul>

<h3>문제점</h3>

<ul>
<li>포그라운드 푸시 에서는 위 코드를 적용해서 헤드업 노티피케이션을 만들수 있습니다.</li>
<li>background 에서는 onMessageReceived 에서 작업하는 내용이 동작하지 않아서 head-up notification 동작을 고민하고 찾아 보았습니다.</li>
<li>결론은 푸시전송시 아래와 같은 형태로 하여 보내고 있습니다. </li>
<li>아래와 같은 형태는 포그라운드 상태에서 onMessageReceived 메소드를 이용하여 원하는 작업이 가능합니다.</li>
<li>백그라운드 상태에서는 priority : high 를 추가해도 head-up 은 동작 하지 않았습니다.</li>
<li>동작 안할때는 역시 옛날 방식 notification 필드 자체를 제거해서 하면 onMessageReceived 에서 head up 이 동작 가능합니다.</li>
<li>꼭 필요한 경우 예날 방식 처림 notification 없는 버전으로 작업 해야 할거 같습니다.<br></li>
</ul>
<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="w">  </span><span class="p">{</span><span class="w">
    </span><span class="nt">"to"</span><span class="p">:</span><span class="w"> </span><span class="s2">"토큰"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"notification"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">

    </span><span class="p">},</span><span class="w">
    </span><span class="nt">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">

    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span></code></pre></div>
	  ]]></description>
	</item>

	<item>
	  <title>round rect 마스크</title>
	  <link>//round_rect_mask</link>
	  <author>PyeongHo</author>
	  <pubDate>2019-10-17T00:00:00+00:00</pubDate>
	  <guid>//round_rect_mask</guid>
	  <description><![CDATA[
	     <h3>안쪽이 둥근 모서리</h3>

<ul>
<li>둥근 모서리로 특정 뷰를 보여 줘야 할때</li>
<li>안쪽에 차트나 이미지가 있고 외부에서 마스킹 할때?!</li>
<li>편한 방법은 나인패치로 작업 하셔도 됩니다.</li>
<li>아래 리소스 처럼 하면 가운데가 뻥 뚫린 레이어를 만들 수 있습니다.</li>
<li>색상은 이해되기 쉽게 빨간색과 검정색을 사용 했습니다.</li>
<li>색상을 같은 색으로 하면 마스킹은 가능 합니다.</li>
</ul>
<div class="highlight"><pre><code class="language-xml" data-lang="xml"><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;layer-list</span> <span class="na">xmlns:android=</span><span class="s">"http://schemas.android.com/apk/res/android"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;item</span>
        <span class="na">android:bottom=</span><span class="s">"-20dp"</span>
        <span class="na">android:left=</span><span class="s">"-20dp"</span>
        <span class="na">android:right=</span><span class="s">"-20dp"</span>
        <span class="na">android:top=</span><span class="s">"-20dp"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;shape</span> <span class="na">android:shape=</span><span class="s">"rectangle"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;stroke</span>
                <span class="na">android:width=</span><span class="s">"37dp"</span>
                <span class="na">android:color=</span><span class="s">"#ff0000"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;corners</span> <span class="na">android:radius=</span><span class="s">"10dp"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/shape&gt;</span>
    <span class="nt">&lt;/item&gt;</span>


    <span class="nt">&lt;item</span> <span class="na">android:bottom=</span><span class="s">"6dp"</span>
        <span class="na">android:left=</span><span class="s">"6dp"</span>
        <span class="na">android:right=</span><span class="s">"6dp"</span>
        <span class="na">android:top=</span><span class="s">"6dp"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;shape</span> <span class="na">android:shape=</span><span class="s">"rectangle"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;stroke</span>
                <span class="na">android:width=</span><span class="s">"12dp"</span>
                <span class="na">android:color=</span><span class="s">"#000000"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;corners</span> <span class="na">android:radius=</span><span class="s">"10dp"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/shape&gt;</span>
    <span class="nt">&lt;/item&gt;</span>

<span class="nt">&lt;/layer-list&gt;</span>

</code></pre></div>
	  ]]></description>
	</item>


</channel>
</rss>
