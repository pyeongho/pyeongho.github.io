<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>pyeongho.github.io/</title>
   
   <link>https://pyeongho.github.io/</link>
   <description>즐거운 공장</description>
   <language>en-uk</language>
   <managingEditor> PyeongHo</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>ConstraintLayout 이제 사용 할 듯</title>
	  <link>//constraint</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-07-03T00:00:00+00:00</pubDate>
	  <guid>//constraint</guid>
	  <description><![CDATA[
	     <h3>출처</h3>

<ul>
<li><a href="https://android-developers.googleblog.com/2017/08/understanding-performance-benefits-of.html">https://android-developers.googleblog.com/2017/08/understanding-performance-benefits-of.html</a></li>
<li><a href="http://abandonia.tistory.com/1">http://abandonia.tistory.com/1</a></li>
</ul>

<h3>주저리</h3>

<ul>
<li>언제 부턴가 새로운 앱을 만들면  ConstraintLayout 으로 hello world 나왔음에도 불구 하고   RelativeLayout 과 LinearLayout 를 이용하여 디자인을 구성 하였다. 잘 사용 하고 있는데 또 나와서 공부 하기 귀찮아서 ㅎㅎㅎ</li>
</ul>

<h3>성능 이슈</h3>

<ul>
<li> ConstraintLayout 이걸 사용 하면 많은 이야기가 있지만 일단 기존 방법 보다 빠르다고 한다. 트리구조의 뷰를 찾아서 계산 하는게 아니라 1 depth 구조로  만드는게 핵심 처럼 보인다. 수평적인 계층 구조라고 한다. 그리고 실제 테스트 했을때 빨라 졌다고 합니다.</li>
<li><p>테스트 소스</p>

<ul>
<li><a href="https://github.com/googlesamples/android-constraint-layout-performance">https://github.com/googlesamples/android-constraint-layout-performance</a></li>
</ul></li>
<li><h3>애니메이션</h3></li>
<li><p>구글에서 제공하는 샘플이 있어서 공부도 할겸 다운 받아서 공부</p>

<ul>
<li><a href="https://github.com/googlesamples/android-ConstraintLayoutExamples">https://github.com/googlesamples/android-ConstraintLayoutExamples</a></li>
</ul></li>
<li><p>레이아웃도 레이아웃 이지만 MotionLayout 이용한 샘플이 사용 할 수 밖에 없는 이유를 제공 했습니다. </p></li>
<li><p>일단 부드러운 애니메이션이 있으니 무조건 사용하기로 결심   </p></li>
</ul>

<h3>문제점</h3>

<ul>
<li>tool 에서 제공해주는 ConstraintLayout 컨버팅 기능을 사용하려고 했지만 레이아웃이 죄다 깨지는 현상이 발생 했습니다.</li>
<li>역시 한땀 한땀 공부 하며 바꿔야 겠습니다.</li>
</ul>

<h3>현재까지 팁</h3>

<ul>
<li>마법사 지팡이를 잘 누르자 </li>
<li>정렬 기능은 너무 좋은것(마치 포토샵의 정릴 기능 처럼)</li>
<li>팩 기능, 여러가지를 묶어서 사용 할때 좋아요</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>푸시 내용 업데이트</title>
	  <link>//push2</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-05-24T00:00:00+00:00</pubDate>
	  <guid>//push2</guid>
	  <description><![CDATA[
	     <h3>푸시 적용</h3>

<ul>
<li><a href="https://pyeongho.github.io/push">https://pyeongho.github.io/push</a></li>
<li><p>위 글에서 푸시 관련 내용을 작성 하였습니다.</p></li>
<li><p>좀더 명확 하게 하기 위한 내용입니다.</p></li>
<li><p>푸시 발송 json 내용에 notification 있으면 백그라운드 앱에서는 os 가 처리합니다.</p></li>
<li><p>기존 처럼 직접 노티피케이션을 만들어서 사용 하고 싶을때는 꼭  notification 내용을 제거 하고 data 만 보내서 원하는 형태로 사용하면 됩니다. </p>

<ul>
<li>이미지를 노티피케이션을 만들거나 </li>
<li>확장 되는 이미지를 만들거나<br></li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>방법을 생각해 보자</title>
	  <link>//thinks</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-03-16T00:00:00+00:00</pubDate>
	  <guid>//thinks</guid>
	  <description><![CDATA[
	     <h4>1. 안드로이드 보안을 위한 방법들</h4>

<ul>
<li>중요한 정보를 저장 하거나 하드코딩 안하면 되지만 어쩔수 없다면</li>
<li><p>아래 내용들은 최대한 지저분하게 여기 저기 막 넣어 둔다.</p></li>
<li><p>인증서를 확인 한다.</p>

<ul>
<li>자바와 네이티브 양쪽</li>
<li>자바 코드는 많으니 네이티브 코드만 추후에 라이브러리를 만들어 볼 생각 입니다.
<script src="https://gist.github.com/pyeongho/a67c34db9cfb06ff1162ec834919b4fb.js"></script></li>
</ul></li>
<li><p>루팅 차단</p></li>
<li><p>설치 프로그램을 확인한다.</p>

<ul>
<li>플레이스토어 설치 인지, 아마존 설치 인지</li>
<li>java, c 둘다 추가 해야 한다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">private static final String PLAY_STORE_APP_ID = "com.android.vending";
public static boolean verifyInstaller(final Context context) {

    final String installer = context.getPackageManager()
            .getInstallerPackageName(context.getPackageName());
    return installer != null
            &amp;&amp; installer.startsWith(PLAY_STORE_APP_ID);

}
</code></pre></div></li>
<li><p>에뮬레이터 동작을 차단 한다.</p>

<ul>
<li>에뮬레이터에서 동작 하면 보안에 더욱 취약 하다.</li>
</ul>
<div class="highlight"><pre><code class="language-" data-lang="">public static boolean checkEmulator() {
    try {
        boolean goldfish = getSystemProperty("ro.hardware").contains("goldfish");
        boolean emu = getSystemProperty("ro.kernel.qemu").length() &gt; 0;
        boolean sdk = getSystemProperty("ro.product.model").equals("sdk");
        if (emu || goldfish || sdk) {
            return true;
        }
    } catch (Exception e) {
    }
    return false;
}
</code></pre></div></li>
<li><p>ndk 통신을 이용한 구글 파이어베이스 서버로 통신</p>

<ul>
<li>base.apk md5 비교</li>
</ul></li>
<li><p>덱스 로더 활용    </p>

<ul>
<li><a href="https://github.com/Instagram/ig-lazy-module-loader">https://github.com/Instagram/ig-lazy-module-loader</a></li>
</ul></li>
<li><p>구 버전 jdgui 버그 코드 추가</p>

<ul>
<li>아래 코드를 추가하면 인터널 에러 발생 </li>
<li>코틀린의 경우 companion object 이 있으면 해당 객체 안에 넣어야합니다. </li>
<li><a href="http://www.programering.com/q/MTMyQDMwATc.html">http://www.programering.com/q/MTMyQDMwATc.html</a></li>
</ul>
<div class="highlight"><pre><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">char</span><span class="o">[]</span> <span class="n">wJ</span> <span class="o">=</span> <span class="s">"0123456789abcdef"</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">();</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">imsi</span> <span class="o">=</span> <span class="s">"204046330839890"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">p</span> <span class="o">=</span> <span class="s">"0"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">keyword</span> <span class="o">=</span> <span class="s">"Telephone"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">tranlateKeyword</span> <span class="o">=</span> <span class="s">"%E7%94%B5%E8%AF%9D"</span><span class="o">;</span>
</code></pre></div></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>윈도우즈에서 파이어베이스 CLI 에러</title>
	  <link>//firebase_cli_error</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-03-08T00:00:00+00:00</pubDate>
	  <guid>//firebase_cli_error</guid>
	  <description><![CDATA[
	     <h3>윈도우즈에서 파이어베이스를 이용해서 개발중 발생한 버그</h3>

<ul>
<li>기본적인 파이어베이스 CLI 사용법 아닙니다.</li>
</ul>

<h4>firebase deploy 진행중 발생하는 에러</h4>
<div class="highlight"><pre><code class="language-" data-lang="">    i  deploying functions, hosting
    Running command: npm --prefix $RESOURCE_DIR run lint
    npm ERR! path D:\abcd\$RESOURCE_DIR\package.json
    npm ERR! code ENOENT
    npm ERR! errno -4058
    npm ERR! syscall open
    npm ERR! enoent ENOENT: no such file or directory, open 'D:\abcd\$RESOURCE_D
    IR\package.json'
    npm ERR! enoent This is related to npm not being able to find a file.
    npm ERR! enoent
    ...
</code></pre></div>
<ul>
<li>윈도우에서 최종 배포 명령을 하니 위처럼 에러가 발생 여기 저기 찾아 보니 수정을 해야함 

<ul>
<li>$RESOURCE<em>DIR -&gt; %RESOURCE</em>DIR%</li>
<li>윈도우와 리눅스계열 컴퓨터의 경로 설정 방법에 의한 차이로 보입니다. </li>
<li>firebase.json 파일을 열어서 위 내용처럼 바꾸어 주면 됩니다.</li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>코틀린 KTX</title>
	  <link>//kotlin_ktx</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-03-05T00:00:00+00:00</pubDate>
	  <guid>//kotlin_ktx</guid>
	  <description><![CDATA[
	     <h3>코틀린 개발용 확장 라이브러리 KTX 에대한 지극히 개인적인 생각</h3>

<ul>
<li><p>코틀린 KTX 내용 블로그</p>

<ul>
<li><a href="https://android-developers.googleblog.com/2018/02/introducing-android-ktx-even-sweeter.html?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed%3A+blogspot%2FhsDu+%28Android+Developers+Blog%29">KTX 안드로이드 구글 블로그 영문</a></li>
<li><a href="https://developers-kr.googleblog.com/2018/02/introducing-android-ktx-even-sweeter-kotlin-development-for-android.html">KTX 안드로이드 구글 블로그 번역리뷰</a></li>
<li>샘플만 사용해 본 느낌 이고 현재 개발 환경으로 인해서 생각한 내용 입니다. 한줄로 나온 부분은 잘 확인해 보셔야 합니다. </li>
</ul></li>
</ul>

<p>| kotlin | kotlin with KTX |
| ---- | ---- |
|val uri = Uri.parse(myUriString) | val uri = myUriString.toUri() |
|sharedPreferences.edit().putBoolean(key, value).apply() | sharedPreferences.edit { putBoolean(key, value) } |</p>

<ul>
<li>위 내용 이외에 많은 부분이 있습니다.</li>
<li>기존 코틀린 또는 람다 표기법보다 코드 양이 더욱 줄어 들고 어떤 코드는 직관적 입니다.( =&gt; toUri())</li>
<li>하지만 이런 내용들은 API를 코틀린의 기능을 이용해서 확장 시킨 기능이어서 새롭게 시작 개발자 들에게 좋지 못하다고 생각합니다.(교육을 못하는 개발환경)</li>
<li>toUri() 를 사용할때 기본적인 함수를 모를때 발생 할 수 있는 일들, sharedPreferences apply 를 사용 안 할 가능성등 많은 부분이 초급 개발자들이 사용 하면 추후 발생 할 내용 들이 부담 스럽게 다가 옵니다. </li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>프로가드라 알차게 사용하기</title>
	  <link>//pro_guard</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-03-02T00:00:00+00:00</pubDate>
	  <guid>//pro_guard</guid>
	  <description><![CDATA[
	     <h4>1. 코드난독화를 위해서 사용하는 프로가드</h4>

<ul>
<li>자세한 프로가드 사용법은 아닙니다.</li>
<li>패키지 구성을 어떻게 하면 좋을지에 대한 내용입니다.</li>
<li>프로가드 적용시 패키명과 클래스명이 유지 되는것중 액티비티가 있습니다.</li>
<li>그렇게 되면 기본적인 구성을 확인 가능하면 그 안에 있는 하위 패키지 이름을 보면서 내용 유추가 가능해 진다.</li>
<li>아주 간단한 방법으로 액티비티를 따로 모아서 패키지를 만들어서 관리혀면 생각보다 좋다.</li>
<li>액티비티 뿐만 아니라 클래스명과 패키지명이 유지되어야 하는 내용을 따로 관리하면 생각보다 큰 효과를 얻습니다.</li>
<li><p><a href="https://academy.realm.io/kr/posts/jon-reeve-reverse-engineering-is-not-just-for-hackers-android/">https://academy.realm.io/kr/posts/jon-reeve-reverse-engineering-is-not-just-for-hackers-android/</a></p></li>
<li><p>보안의 명언 </p>

<ul>
<li>&quot;정말 보안이 필요한 것이 있다면 앱에 넣지 마세요.&quot;</li>
<li>앱을 완벽하게 보호할 수는 없습니다. 투입할 수 있는 시간의 양과 보안 정도와 공격자 수 사이에 절충해야 합니다</li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>작은가게 성공 매뉴얼</title>
	  <link>//nav_manual</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-02-27T00:00:00+00:00</pubDate>
	  <guid>//nav_manual</guid>
	  <description><![CDATA[
	     <h4>본것 깨달은것 적용할것</h4>

<h4>1. 혼자 읽기</h4>

<ul>
<li>작은 가게 성공 매뉴얼 

<ul>
<li>본것

<ul>
<li>62: 혼자 일한다고 해도 매뉴얼은 필요합니다. 내 생각과 철학, 일하는 방식과 순서를 글로만 정리해 두어도 생산성과 성과가 올라간다.</li>
</ul></li>
<li>깨달은것

<ul>
<li>회사에서 일을 혼자 하는 일이 많아지고 남들이 안 본다는 이유로 정리하는 시간이 줄어 들고 있다. 간단한 내용의 블로그도 적지 않고 있는 자신을 발견 하면서 다시 하번 정리 습관을 늘려야 겠다고 생각 함</li>
<li>남들도 다 알거라는 세세한 부분이라도 정리하자 </li>
<li>하루에 하나씩은 어떤내용이라도 적어보자</li>
<li>수영을 안가는 날은 운동을 해보자 </li>
<li>독서 모임은 꼭 가고 정리는 2번에 걸쳐서 혼자서 읽은 내용 후 독서 모임에 참가하여 다시 적자 </li>
</ul></li>
</ul></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 띵스</title>
	  <link>//android_things</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-02-24T00:00:00+00:00</pubDate>
	  <guid>//android_things</guid>
	  <description><![CDATA[
	     <h4>구글 랩스 안드로이드 띵즈</h4>

<ul>
<li>안드로이드 띵즈 : 운영체제 이름</li>
<li>2월24일 구글코라아에서 진행 하는 발표에 참석</li>
</ul>

<h3>0. 구글</h3>

<ul>
<li><img src="http://drive.google.com/uc?export=view&amp;id=1S7V2V6rfTWe2M6RnEobBU9WzUnYW5hHs" alt="이거주나요?"></li>
<li>생각보다 비싼거다고 안줬습니다. </li>
</ul>

<h3>1. 안드로이드 띵스</h3>

<ul>
<li>똑똑하고 연결된 기기</li>
<li>직접 연결, 브리지 연결</li>
<li><img src="http://drive.google.com/uc?export=view&amp;id=1TN1Y1oUz0l4njJ-xGaUmBYVtZFdJokRL" alt="구조"></li>
<li>임베디드에서 어려운 점을 구글에서 해준다.</li>
<li>안드로이드 프레임워크, 리눅스 커널</li>
<li>제조사는 원래 햐야 했던, 드라이버와 응용프로그램만 만들면 된다.</li>
<li>업데이트나 안드로이드 업데이트는 구글에서 한다.</li>
<li>응용프로그램도 안드로이드 개발자가 할 수 있으니 좀더 편한 임베디드 시스템을 만들수 있다.</li>
<li>AOSP 와 다른점 

<ul>
<li>Android SDK, Android Studio =&gt;  play services , firebase, cloud platform</li>
<li>스토어 없지만 개발자 콘솔에서 배포 관리하여 업데이트가 가능하다. 운영체제 업데이트도 구글에서 한다.</li>
</ul></li>
<li>라즈베리파이3에선도 안드로이드 띵즈는 동작한다.</li>
<li>샘플보드에서 동작 사진

<ul>
<li><a href="https://huewu.github.io/ataog_codelab/#0">설명서 링크</a></li>
<li>위 링크가 언제까지 동작 할지는 모르겠지만 우선 링크</li>
<li><img src="http://drive.google.com/uc?export=view&amp;id=1jX4w31ro7tj0lkeStoLzElnbJnhUZAx2" alt="동작"></li>
<li>크리덴셜 부분이 조금만 실수 해도 동작 하지 않아서 약간 오래 걸리긴 했다.</li>
<li><a href="git%20clone%20https://github.com/androidthings/sample-googleassistant.git">샘플코드</a></li>
</ul></li>
</ul>

<h3>2. 액션온구글</h3>

<ul>
<li>사용자와 구글사이의 대화형 인터페이스 </li>
<li>한국어 지원 가능 하여 기본적인 AI 스피커를 만들 수 있어 보인다.</li>
<li>설치없이 사용가능: 이름만 알면</li>
<li>액션 기능 단위</li>
<li>다이얼롤그플로우 : Dialogflow(API.AI) , 챗봇 빌더

<ul>
<li>어시스턴스에서는 무료</li>
</ul></li>
<li>SSML 포맷 재생 가능</li>
<li>사용자 목소리 인식 또는 계정정보 기반, 사용자 구분 가능</li>
<li>보안이필요 없으면 그냥 로그인 없어도 됨</li>
<li>대화 세션 중 상태 저장 가능</li>
<li>풀필먼트 fullfillment </li>
<li>파이어베이스 글라우펑션 기능</li>
<li>정해진 질문에 답변합니다.</li>
<li>다이얼로그플로우 : 헌국어 머신러닝은 되긴함 </li>
<li><a href="https://huewu.github.io/ataog_codelab/#0">설명서 링크</a></li>
<li>사용 후기

<ul>
<li>어떻게 말을 입력하고 데이터를 저장해야 하는지 알 수 있었다.</li>
</ul></li>
</ul>

<h3>3. 전체적인 내용</h3>

<ul>
<li>2개를 합쳐서 해야 하는 방법을 따로 공부해야 한다.</li>
<li>하지만 보드가 없어서 고민입니다.</li>
<li>라즈베리파이3 라도 사야하나 </li>
<li>안드로이드 띵즈는 응용프로그램에서 센서 연결등을 어떻게 해야 하는지 공부해야 하며</li>
<li>액션온구글 만든걸 응용프로그램에서 확인 하는걸 따로 공부 해야 한다.</li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>애플리케이션 Foreground 확인</title>
	  <link>//lifecycle</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-02-12T00:00:00+00:00</pubDate>
	  <guid>//lifecycle</guid>
	  <description><![CDATA[
	     <h3>애플리케이션이 Foreground 를 확인 해야 할 때는 많습니다.</h3>

<ul>
<li>안드로이드 사용자중 홈버튼으로 앱을 종료 시키는 사람이 의외로 많다.</li>
<li>백그라운드 동작을 허용하지 않기 위해서는 포그라운드 인지 백그라운드 인지 확인을 해야 한다.</li>
<li>api 26이 나오면서 권한 없이 사용 가능한 방법이 생겼다.</li>
<li>Application.ActivityLifecycleCallbacks 를 이용하는 방법</li>
<li>Application 상속받은 클래스에서 위 클래스를 구현해 주면 됩니다. </li>
<li>사용은 애플리케이션 상속 받은 코드에서 init 을 호출해서 사용하면 됩니다.</li>
<li><div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">
    class OnApplication: Application() {
        override fun onCreate() {
            super.onCreate()
            Foreground.init(this)

        }
    }

</code></pre></div></li>
<li><p>애프리케이션 생성자에서 클래스를 초기화 합니다.</p></li>
<li><p>싱글톤 클래스라서 사용은 편하게 하시면 됩니다. 아래 처럼 원하는걸로 편하게 사용하면 됩니다.</p>

<ul>
<li>Foreground.get().isBackground</li>
<li>Foreground.get().appStatus</li>
</ul></li>
<li><p>전체 코드는 아래에 있습니다.</p>

<ul>
<li>간단한 동작 설명<br>

<ul>
<li>onActivityStarted 추가 되면 카운트 +1</li>
<li>onActivityStopped 추가 되면 카운트 -1</li>
<li>카운트가 0 이면 백그라운드</li>
<li>카운트가 1 보다 크면 포그라운드</li>
<li>카운트가 1 이면 포그라운드 전환<br></li>
</ul></li>
</ul></li>
</ul>

<p><script src="https://gist.github.com/pyeongho/59944e4e9e8d76f45c6f395dccd1d8e8.js"></script></p>

	  ]]></description>
	</item>

	<item>
	  <title>안드로이드 immersive</title>
	  <link>//immersive</link>
	  <author>PyeongHo</author>
	  <pubDate>2018-01-26T00:00:00+00:00</pubDate>
	  <guid>//immersive</guid>
	  <description><![CDATA[
	     <h3>갤럭시 s8 의 이상한 기능</h3>

<ul>
<li>갤럭시 s8 에서 특정 설정을 하면 소트키가 항상 숨겨지는 모드가 존재 해서 내가 추가한 내용은 아니지만 마치 이머시브 모드 처럼 동작 하는 현상</li>
<li>애플리케이션 개발 중에는 몰라도 될거 같지만 막상 개발하다 보면 알아야 도움 되는 내용입니다.</li>
<li><p>알아야 하는 내용</p>

<ul>
<li>애플리케이션 시작시 소프트키가 활성화 되어 있는지 체크 해야 하는부부</li>
<li>에플리케이션 실행 중 변경 되는 내용 이렇게 2가지 경우가 있습니다.</li>
</ul></li>
<li><p>애플리케이션 시작하면서 확인 하는 코드 </p>

<ul>
<li>enable 가 0 보다 크면 소프트 키가 안보이는 상태 입니다.</li>
</ul>
<div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">    var enable = 0
    try {
        enable = if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN_MR1) {
            Settings.Global.getInt(activity.contentResolver, "navigationbar_hide_bar_enabled")
        } else {
            -1
        }
    }catch (e: Exception){
    }
</code></pre></div></li>
<li><p>런타임에서 리스너로 확인 하는 방법</p>

<ul>
<li>arg 가 2일때 소프트 키가 안보이는 상태 입니다.</li>
</ul>
<div class="highlight"><pre><code class="language-kotlin" data-lang="kotlin">    val decorView = activity.window.decorView
    decorView.setOnSystemUiVisibilityChangeListener {arg -&gt;
        log.d("Current arg: " + arg)
        if(arg == 2){
          //TODO 소포트키 안보임
        }else{
          //TODO 소포트 보임
        }
    }
</code></pre></div></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
